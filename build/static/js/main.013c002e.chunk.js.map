{"version":3,"sources":["constants/productConstants.js","constants/cartConstants.js","constants/userConstants.js","constants/orderConstants.js","store.js","reducers/productReducers.js","reducers/cartReducers.js","reducers/userReducers.js","reducers/orderReducers.js","components/SearchBox.js","actions/userActions.js","components/Header.js","components/Footer.js","components/Rating.js","components/Product.js","components/Message.js","components/Loader.js","components/Paginate.js","actions/productActions.js","components/ProductCarousel.js","components/Meta.js","screens/HomeScreen.js","screens/ProductScreen.js","actions/cartActions.js","screens/CartScreen.js","components/FormContainer.js","screens/LoginScreen.js","screens/RegisterScreen.js","screens/ProfileScreen.js","actions/orderActions.js","components/CheckoutSteps.js","screens/ShippingScreen.js","screens/PaymentScreen.js","screens/PlaceOrderScreen.js","screens/OrderScreen.js","screens/UserListScreen.js","screens/UserEditScreen.js","screens/ProductListScreen.js","screens/ProductEditScreen.js","screens/OrderListScreen.js","screens/category.js","App.js","serviceWorker.js","index.js"],"names":["PRODUCT_LIST_REQUEST","PRODUCT_LIST_SUCCESS","PRODUCT_LIST_FAIL","PRODUCT_DETAILS_REQUEST","PRODUCT_DETAILS_SUCCESS","PRODUCT_DETAILS_FAIL","PRODUCT_DELETE_REQUEST","PRODUCT_DELETE_SUCCESS","PRODUCT_DELETE_FAIL","PRODUCT_CREATE_REQUEST","PRODUCT_CREATE_SUCCESS","PRODUCT_CREATE_FAIL","PRODUCT_CREATE_RESET","PRODUCT_UPDATE_REQUEST","PRODUCT_UPDATE_SUCCESS","PRODUCT_UPDATE_FAIL","PRODUCT_UPDATE_RESET","PRODUCT_CREATE_REVIEW_REQUEST","PRODUCT_CREATE_REVIEW_SUCCESS","PRODUCT_CREATE_REVIEW_FAIL","PRODUCT_CREATE_REVIEW_RESET","PRODUCT_TOP_REQUEST","PRODUCT_TOP_SUCCESS","PRODUCT_TOP_FAIL","CART_ADD_ITEM","CART_CLEAR_ITEMS","CART_REMOVE_ITEM","CART_SAVE_SHIPPING_ADDRESS","CART_SAVE_PAYMENT_METHOD","USER_LOGIN_REQUEST","USER_LOGIN_SUCCESS","USER_LOGIN_FAIL","USER_LOGOUT","USER_REGISTER_REQUEST","USER_REGISTER_SUCCESS","USER_REGISTER_FAIL","USER_DETAILS_REQUEST","USER_DETAILS_SUCCESS","USER_DETAILS_FAIL","USER_DETAILS_RESET","USER_UPDATE_PROFILE_REQUEST","USER_UPDATE_PROFILE_SUCCESS","USER_UPDATE_PROFILE_FAIL","USER_UPDATE_PROFILE_RESET","USER_LIST_REQUEST","USER_LIST_SUCCESS","USER_LIST_FAIL","USER_LIST_RESET","USER_DELETE_REQUEST","USER_DELETE_SUCCESS","USER_DELETE_FAIL","USER_UPDATE_REQUEST","USER_UPDATE_SUCCESS","USER_UPDATE_FAIL","USER_UPDATE_RESET","ORDER_CREATE_REQUEST","ORDER_CREATE_SUCCESS","ORDER_CREATE_FAIL","ORDER_CREATE_RESET","ORDER_DETAILS_REQUEST","ORDER_DETAILS_SUCCESS","ORDER_DETAILS_FAIL","ORDER_PAY_REQUEST","ORDER_PAY_SUCCESS","ORDER_PAY_FAIL","ORDER_PAY_RESET","ORDER_LIST_MY_REQUEST","ORDER_LIST_MY_SUCCESS","ORDER_LIST_MY_FAIL","ORDER_LIST_MY_RESET","ORDER_LIST_REQUEST","ORDER_LIST_SUCCESS","ORDER_LIST_FAIL","ORDER_DELIVER_REQUEST","ORDER_DELIVER_SUCCESS","ORDER_DELIVER_FAIL","ORDER_DELIVER_RESET","reducer","combineReducers","productList","state","arguments","length","undefined","products","action","type","loading","payload","pages","page","error","productDetails","product","reviews","productDelete","success","productCreate","productUpdate","productReviewCreate","productTopRated","cart","cartItems","shippingAddress","item","existItem","find","x","map","filter","paymentMethod","userLogin","userInfo","userRegister","userDetails","user","userUpdateProfile","userList","users","userDelete","userUpdate","orderCreate","order","orderDetails","orderItems","orderPay","orderDeliver","orderListMy","orders","orderList","cartItemsFromStorage","localStorage","getItem","JSON","parse","userInfoFromStorage","initialState","middleware","thunk","store","createStore","composeWithDevTools","applyMiddleware","SearchBox","_ref","history","keyword","setKeyword","useState","_jsxs","Form","onSubmit","e","preventDefault","trim","push","inline","children","_jsx","Control","name","onChange","target","value","placeholder","className","Button","variant","logout","dispatch","removeItem","document","location","href","getUserDetails","id","async","getState","config","headers","Authorization","token","data","axios","get","message","response","Header","useDispatch","useSelector","Navbar","bg","expand","collapseOnSelect","Container","LinkContainer","to","Brand","Toggle","aria-controls","Collapse","Route","render","style","marginLeft","class","Nav","Link","NavDropdown","title","Item","onClick","logoutHandler","isAdmin","Footer","Row","Col","Rating","text","color","defaultProps","Product","Card","backgroundColor","_id","Img","border","src","image","Body","Title","as","Text","rating","numReviews","price","Message","Alert","Loader","Spinner","animation","role","width","height","margin","display","Paginate","Pagination","Array","keys","active","listProducts","pageNumber","listProductDetails","ProductCarousel","useEffect","_Fragment","Carousel","pause","Image","alt","fluid","Caption","Meta","description","keywords","Helmet","content","HomeScreen","match","params","pdcollection","setpdcollection","then","res","catch","err","console","log","sm","md","lg","xl","ProductScreen","qty","setQty","setRating","comment","setComment","successProductReview","loadingProductReview","errorProductReview","ListGroup","countInStock","addToCartHandler","disabled","review","createdAt","substring","createProductReview","productId","post","Group","controlId","Label","row","addToCart","setItem","stringify","CartScreen","search","Number","split","removeFromCartHandler","removeFromCart","rounded","reduce","acc","toFixed","checkoutHandler","FormContainer","xs","LoginScreen","email","setEmail","password","setPassword","redirect","login","RegisterScreen","setName","confirmPassword","setConfirmPassword","setMessage","register","ProfileScreen","loadingOrders","errorOrders","put","updateUserProfile","Table","striped","bordered","hover","responsive","totalPrice","isPaid","paidAt","isDelivered","deliveredAt","CheckoutSteps","step1","step2","step3","step4","ShippingScreen","address","setAddress","city","setCity","postalCode","setPostalCode","country","setCountry","required","PaymentScreen","setPaymentMethod","Check","label","checked","PlaceOrderScreen","addDecimals","num","Math","round","itemsPrice","shippingPrice","taxPrice","index","placeOrderHandler","createOrder","OrderScreen","orderId","sdkReady","setSdkReady","loadingPay","successPay","loadingDeliver","successDeliver","window","paypal","clientId","script","createElement","onload","body","appendChild","addPayPalScript","PayPalButton","amount","onSuccess","paymentResult","payOrder","deliverHandler","deliverOrder","UserListScreen","successDelete","deleteHandler","confirm","delete","deleteUser","UserEditScreen","userId","setIsAdmin","loadingUpdate","errorUpdate","successUpdate","updateUser","ProductListScreen","loadingDelete","errorDelete","loadingCreate","errorCreate","successCreate","createdProduct","deleteProduct","createProductHandler","category","brand","ProductEditScreen","setPrice","setImage","setBrand","setCategory","setCountInStock","setDescription","uploading","setUploading","updateProduct","File","custom","file","files","base64","Promise","resolve","reject","fileReader","FileReader","readAsDataURL","result","onerror","convertToBase64","formData","FormData","append","OrderListScreen","Categoryscreen","pds","App","Router","path","component","exact","Boolean","hostname","ReactDOM","Provider","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.013c002e.chunk.js","sourcesContent":["export const PRODUCT_LIST_REQUEST = 'PRODUCT_LIST_REQUEST'\r\nexport const PRODUCT_LIST_SUCCESS = 'PRODUCT_LIST_SUCCESS'\r\nexport const PRODUCT_LIST_FAIL = 'PRODUCT_LIST_FAIL'\r\n\r\nexport const PRODUCT_DETAILS_REQUEST = 'PRODUCT_DETAILS_REQUEST'\r\nexport const PRODUCT_DETAILS_SUCCESS = 'PRODUCT_DETAILS_SUCCESS'\r\nexport const PRODUCT_DETAILS_FAIL = 'PRODUCT_DETAILS_FAIL'\r\n\r\nexport const PRODUCT_DELETE_REQUEST = 'PRODUCT_DELETE_REQUEST'\r\nexport const PRODUCT_DELETE_SUCCESS = 'PRODUCT_DELETE_SUCCESS'\r\nexport const PRODUCT_DELETE_FAIL = 'PRODUCT_DELETE_FAIL'\r\n\r\nexport const PRODUCT_CREATE_REQUEST = 'PRODUCT_CREATE_REQUEST'\r\nexport const PRODUCT_CREATE_SUCCESS = 'PRODUCT_CREATE_SUCCESS'\r\nexport const PRODUCT_CREATE_FAIL = 'PRODUCT_CREATE_FAIL'\r\nexport const PRODUCT_CREATE_RESET = 'PRODUCT_CREATE_RESET'\r\n\r\nexport const PRODUCT_UPDATE_REQUEST = 'PRODUCT_UPDATE_REQUEST'\r\nexport const PRODUCT_UPDATE_SUCCESS = 'PRODUCT_UPDATE_SUCCESS'\r\nexport const PRODUCT_UPDATE_FAIL = 'PRODUCT_UPDATE_FAIL'\r\nexport const PRODUCT_UPDATE_RESET = 'PRODUCT_UPDATE_RESET'\r\n\r\nexport const PRODUCT_CREATE_REVIEW_REQUEST = 'PRODUCT_CREATE_REVIEW_REQUEST'\r\nexport const PRODUCT_CREATE_REVIEW_SUCCESS = 'PRODUCT_CREATE_REVIEW_SUCCESS'\r\nexport const PRODUCT_CREATE_REVIEW_FAIL = 'PRODUCT_CREATE_REVIEW_FAIL'\r\nexport const PRODUCT_CREATE_REVIEW_RESET = 'PRODUCT_CREATE_REVIEW_RESET'\r\n\r\nexport const PRODUCT_TOP_REQUEST = 'PRODUCT_TOP_REQUEST'\r\nexport const PRODUCT_TOP_SUCCESS = 'PRODUCT_TOP_SUCCESS'\r\nexport const PRODUCT_TOP_FAIL = 'PRODUCT_TOP_FAIL'\r\n","export const CART_ADD_ITEM = 'CART_ADD_ITEM'\r\nexport const CART_CLEAR_ITEMS = 'CART_RESET'\r\nexport const CART_REMOVE_ITEM = 'CART_REMOVE_ITEM'\r\nexport const CART_SAVE_SHIPPING_ADDRESS = 'CART_SAVE_SHIPPING_ADDRESS'\r\nexport const CART_SAVE_PAYMENT_METHOD = 'CART_SAVE_PAYMENT_METHOD'\r\n","export const USER_LOGIN_REQUEST = 'USER_LOGIN_REQUEST'\r\nexport const USER_LOGIN_SUCCESS = 'USER_LOGIN_SUCCESS'\r\nexport const USER_LOGIN_FAIL = 'USER_LOGIN_FAIL'\r\nexport const USER_LOGOUT = 'USER_LOGOUT'\r\n\r\nexport const USER_REGISTER_REQUEST = 'USER_REGISTER_REQUEST'\r\nexport const USER_REGISTER_SUCCESS = 'USER_REGISTER_SUCCESS'\r\nexport const USER_REGISTER_FAIL = 'USER_REGISTER_FAIL'\r\n\r\nexport const USER_DETAILS_REQUEST = 'USER_DETAILS_REQUEST'\r\nexport const USER_DETAILS_SUCCESS = 'USER_DETAILS_SUCCESS'\r\nexport const USER_DETAILS_FAIL = 'USER_DETAILS_FAIL'\r\nexport const USER_DETAILS_RESET = 'USER_DETAILS_RESET'\r\n\r\nexport const USER_UPDATE_PROFILE_REQUEST = 'USER_UPDATE_PROFILE_REQUEST'\r\nexport const USER_UPDATE_PROFILE_SUCCESS = 'USER_UPDATE_PROFILE_SUCCESS'\r\nexport const USER_UPDATE_PROFILE_FAIL = 'USER_UPDATE_PROFILE_FAIL'\r\nexport const USER_UPDATE_PROFILE_RESET = 'USER_UPDATE_PROFILE_RESET'\r\n\r\nexport const USER_LIST_REQUEST = 'USER_LIST_REQUEST'\r\nexport const USER_LIST_SUCCESS = 'USER_LIST_SUCCESS'\r\nexport const USER_LIST_FAIL = 'USER_LIST_FAIL'\r\nexport const USER_LIST_RESET = 'USER_LIST_RESET'\r\n\r\nexport const USER_DELETE_REQUEST = 'USER_DELETE_REQUEST'\r\nexport const USER_DELETE_SUCCESS = 'USER_DELETE_SUCCESS'\r\nexport const USER_DELETE_FAIL = 'USER_DELETE_FAIL'\r\n\r\nexport const USER_UPDATE_REQUEST = 'USER_UPDATE_REQUEST'\r\nexport const USER_UPDATE_SUCCESS = 'USER_UPDATE_SUCCESS'\r\nexport const USER_UPDATE_FAIL = 'USER_UPDATE_FAIL'\r\nexport const USER_UPDATE_RESET = 'USER_UPDATE_RESET'\r\n","export const ORDER_CREATE_REQUEST = 'ORDER_CREATE_REQUEST'\r\nexport const ORDER_CREATE_SUCCESS = 'ORDER_CREATE_SUCCESS'\r\nexport const ORDER_CREATE_FAIL = 'ORDER_CREATE_FAIL'\r\nexport const ORDER_CREATE_RESET = 'ORDER_CREATE_RESET'\r\n\r\nexport const ORDER_DETAILS_REQUEST = 'ORDER_DETAILS_REQUEST'\r\nexport const ORDER_DETAILS_SUCCESS = 'ORDER_DETAILS_SUCCESS'\r\nexport const ORDER_DETAILS_FAIL = 'ORDER_DETAILS_FAIL'\r\n\r\nexport const ORDER_PAY_REQUEST = 'ORDER_PAY_REQUEST'\r\nexport const ORDER_PAY_SUCCESS = 'ORDER_PAY_SUCCESS'\r\nexport const ORDER_PAY_FAIL = 'ORDER_PAY_FAIL'\r\nexport const ORDER_PAY_RESET = 'ORDER_PAY_RESET'\r\n\r\nexport const ORDER_LIST_MY_REQUEST = 'ORDER_LIST_MY_REQUEST'\r\nexport const ORDER_LIST_MY_SUCCESS = 'ORDER_LIST_MY_SUCCESS'\r\nexport const ORDER_LIST_MY_FAIL = 'ORDER_LIST_MY_FAIL'\r\nexport const ORDER_LIST_MY_RESET = 'ORDER_LIST_MY_RESET'\r\n\r\nexport const ORDER_LIST_REQUEST = 'ORDER_LIST_REQUEST'\r\nexport const ORDER_LIST_SUCCESS = 'ORDER_LIST_SUCCESS'\r\nexport const ORDER_LIST_FAIL = 'ORDER_LIST_FAIL'\r\n\r\nexport const ORDER_DELIVER_REQUEST = 'ORDER_DELIVER_REQUEST'\r\nexport const ORDER_DELIVER_SUCCESS = 'ORDER_DELIVER_SUCCESS'\r\nexport const ORDER_DELIVER_FAIL = 'ORDER_DELIVER_FAIL'\r\nexport const ORDER_DELIVER_RESET = 'ORDER_DELIVER_RESET'\r\n","import { createStore, combineReducers, applyMiddleware } from 'redux'\r\nimport thunk from 'redux-thunk'\r\nimport { composeWithDevTools } from 'redux-devtools-extension'\r\nimport {\r\n  productListReducer,\r\n  productDetailsReducer,\r\n  productDeleteReducer,\r\n  productCreateReducer,\r\n  productUpdateReducer,\r\n  productReviewCreateReducer,\r\n  productTopRatedReducer,\r\n} from './reducers/productReducers'\r\nimport { cartReducer } from './reducers/cartReducers'\r\nimport {\r\n  userLoginReducer,\r\n  userRegisterReducer,\r\n  userDetailsReducer,\r\n  userUpdateProfileReducer,\r\n  userListReducer,\r\n  userDeleteReducer,\r\n  userUpdateReducer,\r\n} from './reducers/userReducers'\r\nimport {\r\n  orderCreateReducer,\r\n  orderDetailsReducer,\r\n  orderPayReducer,\r\n  orderDeliverReducer,\r\n  orderListMyReducer,\r\n  orderListReducer,\r\n} from './reducers/orderReducers'\r\n\r\n\r\nconst reducer = combineReducers({\r\n  productList: productListReducer,\r\n  productDetails: productDetailsReducer,\r\n  productDelete: productDeleteReducer,\r\n  productCreate: productCreateReducer,\r\n  productUpdate: productUpdateReducer,\r\n  productReviewCreate: productReviewCreateReducer,\r\n  productTopRated: productTopRatedReducer,\r\n  cart: cartReducer,\r\n  userLogin: userLoginReducer,\r\n  userRegister: userRegisterReducer,\r\n  userDetails: userDetailsReducer,\r\n  userUpdateProfile: userUpdateProfileReducer,\r\n  userList: userListReducer,\r\n  userDelete: userDeleteReducer,\r\n  userUpdate: userUpdateReducer,\r\n  orderCreate: orderCreateReducer,\r\n  orderDetails: orderDetailsReducer,\r\n  orderPay: orderPayReducer,\r\n  orderDeliver: orderDeliverReducer,\r\n  orderListMy: orderListMyReducer,\r\n  orderList: orderListReducer,\r\n})\r\n\r\nconst cartItemsFromStorage = localStorage.getItem('cartItems')\r\n  ? JSON.parse(localStorage.getItem('cartItems'))\r\n  : []\r\n\r\nconst userInfoFromStorage = localStorage.getItem('userInfo')\r\n  ? JSON.parse(localStorage.getItem('userInfo'))\r\n  : null\r\n\r\nconst shippingAddressFromStorage = localStorage.getItem('shippingAddress')\r\n  ? JSON.parse(localStorage.getItem('shippingAddress'))\r\n  : {}\r\n\r\nconst initialState = {\r\n  cart: {\r\n    cartItems: cartItemsFromStorage,\r\n    shippingAddress: shippingAddressFromStorage,\r\n  },\r\n  userLogin: { userInfo: userInfoFromStorage },\r\n}\r\n\r\nconst middleware = [thunk]\r\n\r\nconst store = createStore(\r\n  reducer,\r\n  initialState,\r\n  composeWithDevTools(applyMiddleware(...middleware))\r\n)\r\n\r\nexport default store\r\n\r\n","import {\r\n  PRODUCT_LIST_REQUEST,\r\n  PRODUCT_LIST_SUCCESS,\r\n  PRODUCT_LIST_FAIL,\r\n  PRODUCT_DETAILS_REQUEST,\r\n  PRODUCT_DETAILS_SUCCESS,\r\n  PRODUCT_DETAILS_FAIL,\r\n  PRODUCT_DELETE_REQUEST,\r\n  PRODUCT_DELETE_SUCCESS,\r\n  PRODUCT_DELETE_FAIL,\r\n  PRODUCT_CREATE_RESET,\r\n  PRODUCT_CREATE_FAIL,\r\n  PRODUCT_CREATE_SUCCESS,\r\n  PRODUCT_CREATE_REQUEST,\r\n  PRODUCT_UPDATE_REQUEST,\r\n  PRODUCT_UPDATE_SUCCESS,\r\n  PRODUCT_UPDATE_FAIL,\r\n  PRODUCT_UPDATE_RESET,\r\n  PRODUCT_CREATE_REVIEW_REQUEST,\r\n  PRODUCT_CREATE_REVIEW_SUCCESS,\r\n  PRODUCT_CREATE_REVIEW_FAIL,\r\n  PRODUCT_CREATE_REVIEW_RESET,\r\n  PRODUCT_TOP_REQUEST,\r\n  PRODUCT_TOP_SUCCESS,\r\n  PRODUCT_TOP_FAIL,\r\n} from '../constants/productConstants'\r\n\r\nexport const productListReducer = (state = { products: [] }, action) => {\r\n  switch (action.type) {\r\n    case PRODUCT_LIST_REQUEST:\r\n      return { loading: true, products: [] }\r\n    case PRODUCT_LIST_SUCCESS:\r\n      return {\r\n        loading: false,\r\n        products: action.payload.products,\r\n        pages: action.payload.pages,\r\n        page: action.payload.page,\r\n      }\r\n    case PRODUCT_LIST_FAIL:\r\n      return { loading: false, error: action.payload }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport const productDetailsReducer = (\r\n  state = { product: { reviews: [] } },\r\n  action\r\n) => {\r\n  switch (action.type) {\r\n    case PRODUCT_DETAILS_REQUEST:\r\n      return { ...state, loading: true }\r\n    case PRODUCT_DETAILS_SUCCESS:\r\n      return { loading: false, product: action.payload }\r\n    case PRODUCT_DETAILS_FAIL:\r\n      return { loading: false, error: action.payload }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport const productDeleteReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case PRODUCT_DELETE_REQUEST:\r\n      return { loading: true }\r\n    case PRODUCT_DELETE_SUCCESS:\r\n      return { loading: false, success: true }\r\n    case PRODUCT_DELETE_FAIL:\r\n      return { loading: false, error: action.payload }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport const productCreateReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case PRODUCT_CREATE_REQUEST:\r\n      return { loading: true }\r\n    case PRODUCT_CREATE_SUCCESS:\r\n      return { loading: false, success: true, product: action.payload }\r\n    case PRODUCT_CREATE_FAIL:\r\n      return { loading: false, error: action.payload }\r\n    case PRODUCT_CREATE_RESET:\r\n      return {}\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport const productUpdateReducer = (state = { product: {} }, action) => {\r\n  switch (action.type) {\r\n    case PRODUCT_UPDATE_REQUEST:\r\n      return { loading: true }\r\n    case PRODUCT_UPDATE_SUCCESS:\r\n      return { loading: false, success: true, product: action.payload }\r\n    case PRODUCT_UPDATE_FAIL:\r\n      return { loading: false, error: action.payload }\r\n    case PRODUCT_UPDATE_RESET:\r\n      return { product: {} }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport const productReviewCreateReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case PRODUCT_CREATE_REVIEW_REQUEST:\r\n      return { loading: true }\r\n    case PRODUCT_CREATE_REVIEW_SUCCESS:\r\n      return { loading: false, success: true }\r\n    case PRODUCT_CREATE_REVIEW_FAIL:\r\n      return { loading: false, error: action.payload }\r\n    case PRODUCT_CREATE_REVIEW_RESET:\r\n      return {}\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport const productTopRatedReducer = (state = { products: [] }, action) => {\r\n  switch (action.type) {\r\n    case PRODUCT_TOP_REQUEST:\r\n      return { loading: true, products: [] }\r\n    case PRODUCT_TOP_SUCCESS:\r\n      return { loading: false, products: action.payload }\r\n    case PRODUCT_TOP_FAIL:\r\n      return { loading: false, error: action.payload }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n","import {\r\n  CART_ADD_ITEM,\r\n  CART_REMOVE_ITEM,\r\n  CART_SAVE_SHIPPING_ADDRESS,\r\n  CART_SAVE_PAYMENT_METHOD,\r\n  CART_CLEAR_ITEMS,\r\n} from '../constants/cartConstants'\r\n\r\nexport const cartReducer = (\r\n  state = { cartItems: [], shippingAddress: {} },\r\n  action\r\n) => {\r\n  switch (action.type) {\r\n    case CART_ADD_ITEM:\r\n      const item = action.payload\r\n\r\n      const existItem = state.cartItems.find((x) => x.product === item.product)\r\n\r\n      if (existItem) {\r\n        return {\r\n          ...state,\r\n          cartItems: state.cartItems.map((x) =>\r\n            x.product === existItem.product ? item : x\r\n          ),\r\n        }\r\n      } else {\r\n        return {\r\n          ...state,\r\n          cartItems: [...state.cartItems, item],\r\n        }\r\n      }\r\n    case CART_REMOVE_ITEM:\r\n      return {\r\n        ...state,\r\n        cartItems: state.cartItems.filter((x) => x.product !== action.payload),\r\n      }\r\n    case CART_SAVE_SHIPPING_ADDRESS:\r\n      return {\r\n        ...state,\r\n        shippingAddress: action.payload,\r\n      }\r\n    case CART_SAVE_PAYMENT_METHOD:\r\n      return {\r\n        ...state,\r\n        paymentMethod: action.payload,\r\n      }\r\n    case CART_CLEAR_ITEMS:\r\n      return {\r\n        ...state,\r\n        cartItems: [],\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n","import {\r\n  USER_DETAILS_FAIL,\r\n  USER_DETAILS_REQUEST,\r\n  USER_DETAILS_RESET,\r\n  USER_DETAILS_SUCCESS,\r\n  USER_LIST_REQUEST,\r\n  USER_LIST_SUCCESS,\r\n  USER_LIST_FAIL,\r\n  USER_LIST_RESET,\r\n  USER_LOGIN_FAIL,\r\n  USER_LOGIN_REQUEST,\r\n  USER_LOGIN_SUCCESS,\r\n  USER_LOGOUT,\r\n  USER_REGISTER_FAIL,\r\n  USER_REGISTER_REQUEST,\r\n  USER_REGISTER_SUCCESS,\r\n  USER_UPDATE_PROFILE_FAIL,\r\n  USER_UPDATE_PROFILE_REQUEST,\r\n  USER_UPDATE_PROFILE_SUCCESS,\r\n  USER_DELETE_REQUEST,\r\n  USER_DELETE_SUCCESS,\r\n  USER_DELETE_FAIL,\r\n  USER_UPDATE_RESET,\r\n  USER_UPDATE_REQUEST,\r\n  USER_UPDATE_SUCCESS,\r\n  USER_UPDATE_FAIL,\r\n  USER_UPDATE_PROFILE_RESET,\r\n} from '../constants/userConstants'\r\n\r\nexport const userLoginReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case USER_LOGIN_REQUEST:\r\n      return { loading: true }\r\n    case USER_LOGIN_SUCCESS:\r\n      return { loading: false, userInfo: action.payload }\r\n    case USER_LOGIN_FAIL:\r\n      return { loading: false, error: action.payload }\r\n    case USER_LOGOUT:\r\n      return {}\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport const userRegisterReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case USER_REGISTER_REQUEST:\r\n      return { loading: true }\r\n    case USER_REGISTER_SUCCESS:\r\n      return { loading: false, userInfo: action.payload }\r\n    case USER_REGISTER_FAIL:\r\n      return { loading: false, error: action.payload }\r\n    case USER_LOGOUT:\r\n      return {}\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport const userDetailsReducer = (state = { user: {} }, action) => {\r\n  switch (action.type) {\r\n    case USER_DETAILS_REQUEST:\r\n      return { ...state, loading: true }\r\n    case USER_DETAILS_SUCCESS:\r\n      return { loading: false, user: action.payload }\r\n    case USER_DETAILS_FAIL:\r\n      return { loading: false, error: action.payload }\r\n    case USER_DETAILS_RESET:\r\n      return { user: {} }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport const userUpdateProfileReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case USER_UPDATE_PROFILE_REQUEST:\r\n      return { loading: true }\r\n    case USER_UPDATE_PROFILE_SUCCESS:\r\n      return { loading: false, success: true, userInfo: action.payload }\r\n    case USER_UPDATE_PROFILE_FAIL:\r\n      return { loading: false, error: action.payload }\r\n    case USER_UPDATE_PROFILE_RESET:\r\n      return {}\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport const userListReducer = (state = { users: [] }, action) => {\r\n  switch (action.type) {\r\n    case USER_LIST_REQUEST:\r\n      return { loading: true }\r\n    case USER_LIST_SUCCESS:\r\n      return { loading: false, users: action.payload }\r\n    case USER_LIST_FAIL:\r\n      return { loading: false, error: action.payload }\r\n    case USER_LIST_RESET:\r\n      return { users: [] }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport const userDeleteReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case USER_DELETE_REQUEST:\r\n      return { loading: true }\r\n    case USER_DELETE_SUCCESS:\r\n      return { loading: false, success: true }\r\n    case USER_DELETE_FAIL:\r\n      return { loading: false, error: action.payload }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport const userUpdateReducer = (state = { user: {} }, action) => {\r\n  switch (action.type) {\r\n    case USER_UPDATE_REQUEST:\r\n      return { loading: true }\r\n    case USER_UPDATE_SUCCESS:\r\n      return { loading: false, success: true }\r\n    case USER_UPDATE_FAIL:\r\n      return { loading: false, error: action.payload }\r\n    case USER_UPDATE_RESET:\r\n      return {\r\n        user: {},\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n","import {\r\n  ORDER_CREATE_REQUEST,\r\n  ORDER_CREATE_SUCCESS,\r\n  ORDER_CREATE_FAIL,\r\n  ORDER_DETAILS_REQUEST,\r\n  ORDER_DETAILS_SUCCESS,\r\n  ORDER_DETAILS_FAIL,\r\n  ORDER_PAY_REQUEST,\r\n  ORDER_PAY_FAIL,\r\n  ORDER_PAY_SUCCESS,\r\n  ORDER_PAY_RESET,\r\n  ORDER_LIST_MY_REQUEST,\r\n  ORDER_LIST_MY_SUCCESS,\r\n  ORDER_LIST_MY_FAIL,\r\n  ORDER_LIST_MY_RESET,\r\n  ORDER_LIST_FAIL,\r\n  ORDER_LIST_SUCCESS,\r\n  ORDER_LIST_REQUEST,\r\n  ORDER_DELIVER_FAIL,\r\n  ORDER_DELIVER_SUCCESS,\r\n  ORDER_DELIVER_REQUEST,\r\n  ORDER_DELIVER_RESET,\r\n  ORDER_CREATE_RESET,\r\n} from '../constants/orderConstants'\r\n\r\nexport const orderCreateReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case ORDER_CREATE_REQUEST:\r\n      return {\r\n        loading: true,\r\n      }\r\n    case ORDER_CREATE_SUCCESS:\r\n      return {\r\n        loading: false,\r\n        success: true,\r\n        order: action.payload,\r\n      }\r\n    case ORDER_CREATE_FAIL:\r\n      return {\r\n        loading: false,\r\n        error: action.payload,\r\n      }\r\n    case ORDER_CREATE_RESET:\r\n      return {}\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport const orderDetailsReducer = (\r\n  state = { loading: true, orderItems: [], shippingAddress: {} },\r\n  action\r\n) => {\r\n  switch (action.type) {\r\n    case ORDER_DETAILS_REQUEST:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n      }\r\n    case ORDER_DETAILS_SUCCESS:\r\n      return {\r\n        loading: false,\r\n        order: action.payload,\r\n      }\r\n    case ORDER_DETAILS_FAIL:\r\n      return {\r\n        loading: false,\r\n        error: action.payload,\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport const orderPayReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case ORDER_PAY_REQUEST:\r\n      return {\r\n        loading: true,\r\n      }\r\n    case ORDER_PAY_SUCCESS:\r\n      return {\r\n        loading: false,\r\n        success: true,\r\n      }\r\n    case ORDER_PAY_FAIL:\r\n      return {\r\n        loading: false,\r\n        error: action.payload,\r\n      }\r\n    case ORDER_PAY_RESET:\r\n      return {}\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport const orderDeliverReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case ORDER_DELIVER_REQUEST:\r\n      return {\r\n        loading: true,\r\n      }\r\n    case ORDER_DELIVER_SUCCESS:\r\n      return {\r\n        loading: false,\r\n        success: true,\r\n      }\r\n    case ORDER_DELIVER_FAIL:\r\n      return {\r\n        loading: false,\r\n        error: action.payload,\r\n      }\r\n    case ORDER_DELIVER_RESET:\r\n      return {}\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport const orderListMyReducer = (state = { orders: [] }, action) => {\r\n  switch (action.type) {\r\n    case ORDER_LIST_MY_REQUEST:\r\n      return {\r\n        loading: true,\r\n      }\r\n    case ORDER_LIST_MY_SUCCESS:\r\n      return {\r\n        loading: false,\r\n        orders: action.payload,\r\n      }\r\n    case ORDER_LIST_MY_FAIL:\r\n      return {\r\n        loading: false,\r\n        error: action.payload,\r\n      }\r\n    case ORDER_LIST_MY_RESET:\r\n      return { orders: [] }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport const orderListReducer = (state = { orders: [] }, action) => {\r\n  switch (action.type) {\r\n    case ORDER_LIST_REQUEST:\r\n      return {\r\n        loading: true,\r\n      }\r\n    case ORDER_LIST_SUCCESS:\r\n      return {\r\n        loading: false,\r\n        orders: action.payload,\r\n      }\r\n    case ORDER_LIST_FAIL:\r\n      return {\r\n        loading: false,\r\n        error: action.payload,\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n","import React, { useState } from 'react'\r\nimport { Form, Button } from 'react-bootstrap'\r\n\r\nconst SearchBox = ({ history }) => {\r\n  const [keyword, setKeyword] = useState('')\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault()\r\n    if (keyword.trim()) {\r\n      history.push(`/search/${keyword}`)\r\n    } else {\r\n      history.push('/')\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Form onSubmit={submitHandler} inline>\r\n      <Form.Control\r\n        type='text'\r\n        name='q'\r\n        onChange={(e) => setKeyword(e.target.value)}\r\n        placeholder='Search Products...'\r\n        className='mr-sm-2 ml-sm-5'\r\n      ></Form.Control>\r\n      <Button type='submit' variant='outline-success' className='p-2'>\r\n        Search\r\n      </Button>\r\n    </Form>\r\n  )\r\n}\r\n\r\nexport default SearchBox\r\n\r\n","import axios from 'axios'\r\nimport {\r\n  USER_DETAILS_FAIL,\r\n  USER_DETAILS_REQUEST,\r\n  USER_DETAILS_SUCCESS,\r\n  USER_LOGIN_FAIL,\r\n  USER_LOGIN_REQUEST,\r\n  USER_LOGIN_SUCCESS,\r\n  USER_LOGOUT,\r\n  USER_REGISTER_FAIL,\r\n  USER_REGISTER_REQUEST,\r\n  USER_REGISTER_SUCCESS,\r\n  USER_UPDATE_PROFILE_FAIL,\r\n  USER_UPDATE_PROFILE_REQUEST,\r\n  USER_UPDATE_PROFILE_SUCCESS,\r\n  USER_DETAILS_RESET,\r\n  USER_LIST_FAIL,\r\n  USER_LIST_SUCCESS,\r\n  USER_LIST_REQUEST,\r\n  USER_LIST_RESET,\r\n  USER_DELETE_REQUEST,\r\n  USER_DELETE_SUCCESS,\r\n  USER_DELETE_FAIL,\r\n  USER_UPDATE_FAIL,\r\n  USER_UPDATE_SUCCESS,\r\n  USER_UPDATE_REQUEST,\r\n} from '../constants/userConstants'\r\nimport { ORDER_LIST_MY_RESET } from '../constants/orderConstants'\r\n\r\nexport const login = (email, password) => async (dispatch) => {\r\n  try {\r\n    dispatch({\r\n      type: USER_LOGIN_REQUEST,\r\n    })\r\n\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n    }\r\n\r\n    const { data } = await axios.post(\r\n      '/api/users/login',\r\n      { email, password },\r\n      config\r\n    )\r\n\r\n    dispatch({\r\n      type: USER_LOGIN_SUCCESS,\r\n      payload: data,\r\n    })\r\n\r\n    localStorage.setItem('userInfo', JSON.stringify(data))\r\n  } catch (error) {\r\n    dispatch({\r\n      type: USER_LOGIN_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    })\r\n  }\r\n}\r\n\r\nexport const logout = () => (dispatch) => {\r\n  localStorage.removeItem('userInfo')\r\n  localStorage.removeItem('cartItems')\r\n  localStorage.removeItem('shippingAddress')\r\n  localStorage.removeItem('paymentMethod')\r\n  dispatch({ type: USER_LOGOUT })\r\n  dispatch({ type: USER_DETAILS_RESET })\r\n  dispatch({ type: ORDER_LIST_MY_RESET })\r\n  dispatch({ type: USER_LIST_RESET })\r\n  document.location.href = '/login'\r\n}\r\n\r\nexport const register = (name, email, password) => async (dispatch) => {\r\n  try {\r\n    dispatch({\r\n      type: USER_REGISTER_REQUEST,\r\n    })\r\n\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n    }\r\n\r\n    const { data } = await axios.post(\r\n      '/api/users',\r\n      { name, email, password },\r\n      config\r\n    )\r\n\r\n    dispatch({\r\n      type: USER_REGISTER_SUCCESS,\r\n      payload: data,\r\n    })\r\n\r\n    dispatch({\r\n      type: USER_LOGIN_SUCCESS,\r\n      payload: data,\r\n    })\r\n\r\n    localStorage.setItem('userInfo', JSON.stringify(data))\r\n  } catch (error) {\r\n    dispatch({\r\n      type: USER_REGISTER_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    })\r\n  }\r\n}\r\n\r\nexport const getUserDetails = (id) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: USER_DETAILS_REQUEST,\r\n    })\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState()\r\n\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    }\r\n\r\n    const { data } = await axios.get(`/api/users/${id}`, config)\r\n\r\n    dispatch({\r\n      type: USER_DETAILS_SUCCESS,\r\n      payload: data,\r\n    })\r\n  } catch (error) {\r\n    const message =\r\n      error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message\r\n    if (message === 'Not authorized, token failed') {\r\n      dispatch(logout())\r\n    }\r\n    dispatch({\r\n      type: USER_DETAILS_FAIL,\r\n      payload: message,\r\n    })\r\n  }\r\n}\r\n\r\nexport const updateUserProfile = (user) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: USER_UPDATE_PROFILE_REQUEST,\r\n    })\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState()\r\n\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    }\r\n\r\n    const { data } = await axios.put(`/api/users/profile`, user, config)\r\n\r\n    dispatch({\r\n      type: USER_UPDATE_PROFILE_SUCCESS,\r\n      payload: data,\r\n    })\r\n    dispatch({\r\n      type: USER_LOGIN_SUCCESS,\r\n      payload: data,\r\n    })\r\n    localStorage.setItem('userInfo', JSON.stringify(data))\r\n  } catch (error) {\r\n    const message =\r\n      error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message\r\n    if (message === 'Not authorized, token failed') {\r\n      dispatch(logout())\r\n    }\r\n    dispatch({\r\n      type: USER_UPDATE_PROFILE_FAIL,\r\n      payload: message,\r\n    })\r\n  }\r\n}\r\n\r\nexport const listUsers = () => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: USER_LIST_REQUEST,\r\n    })\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState()\r\n\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    }\r\n\r\n    const { data } = await axios.get(`/api/users`, config)\r\n\r\n    dispatch({\r\n      type: USER_LIST_SUCCESS,\r\n      payload: data,\r\n    })\r\n  } catch (error) {\r\n    const message =\r\n      error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message\r\n    if (message === 'Not authorized, token failed') {\r\n      dispatch(logout())\r\n    }\r\n    dispatch({\r\n      type: USER_LIST_FAIL,\r\n      payload: message,\r\n    })\r\n  }\r\n}\r\n\r\nexport const deleteUser = (id) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: USER_DELETE_REQUEST,\r\n    })\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState()\r\n\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    }\r\n\r\n    await axios.delete(`/api/users/${id}`, config)\r\n\r\n    dispatch({ type: USER_DELETE_SUCCESS })\r\n  } catch (error) {\r\n    const message =\r\n      error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message\r\n    if (message === 'Not authorized, token failed') {\r\n      dispatch(logout())\r\n    }\r\n    dispatch({\r\n      type: USER_DELETE_FAIL,\r\n      payload: message,\r\n    })\r\n  }\r\n}\r\n\r\nexport const updateUser = (user) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: USER_UPDATE_REQUEST,\r\n    })\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState()\r\n\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    }\r\n\r\n    const { data } = await axios.put(`/api/users/${user._id}`, user, config)\r\n\r\n    dispatch({ type: USER_UPDATE_SUCCESS })\r\n\r\n    dispatch({ type: USER_DETAILS_SUCCESS, payload: data })\r\n  } catch (error) {\r\n    const message =\r\n      error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message\r\n    if (message === 'Not authorized, token failed') {\r\n      dispatch(logout())\r\n    }\r\n    dispatch({\r\n      type: USER_UPDATE_FAIL,\r\n      payload: message,\r\n    })\r\n  }\r\n}\r\n\r\n","import React from 'react'\r\nimport { Route } from 'react-router-dom'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport { Navbar, Nav, Container, NavDropdown } from 'react-bootstrap'\r\nimport SearchBox from './SearchBox'\r\nimport { logout } from '../actions/userActions'\r\n\r\nconst Header = () => {\r\n  const dispatch = useDispatch()\r\n\r\n  const userLogin = useSelector((state) => state.userLogin)\r\n  const { userInfo } = userLogin\r\n\r\n  const logoutHandler = () => {\r\n    dispatch(logout())\r\n  }\r\n\r\n  return (\r\n    <header>\r\n      <Navbar bg='dark' variant='dark' expand='lg' collapseOnSelect>\r\n        <Container>\r\n          <LinkContainer to='/'>\r\n            <Navbar.Brand>Yazh SuperMarket</Navbar.Brand>\r\n          </LinkContainer>\r\n          <Navbar.Toggle aria-controls='basic-navbar-nav' />\r\n          <Navbar.Collapse id='basic-navbar-nav'>\r\n            <Route render={({ history }) => <SearchBox history={history} />} />\r\n            <LinkContainer to='/' style={{marginLeft:'50px'}}>\r\n            <Navbar.Brand><i class=\"fa fa-home\"></i></Navbar.Brand>\r\n              </LinkContainer>\r\n            <Nav className='ml-auto'>\r\n           \r\n            <LinkContainer to='/category'>\r\n                <Nav.Link>\r\n                   <i></i>\r\n                  category\r\n                </Nav.Link>\r\n              </LinkContainer>\r\n              <LinkContainer to='/cart'>\r\n                <Nav.Link>\r\n                  <i className='fas fa-shopping-cart'></i> Cart\r\n                </Nav.Link>\r\n              </LinkContainer>\r\n              {userInfo ? (\r\n                <NavDropdown title={userInfo.name} id='username'>\r\n                  <LinkContainer to='/profile'>\r\n                    <NavDropdown.Item>Profile</NavDropdown.Item>\r\n                  </LinkContainer>\r\n                  <NavDropdown.Item onClick={logoutHandler}>\r\n                    Logout\r\n                  </NavDropdown.Item>\r\n                </NavDropdown>\r\n              ) : (\r\n                <LinkContainer to='/login'>\r\n                  <Nav.Link>\r\n                    <i className='fas fa-user'></i> Sign In\r\n                  </Nav.Link>\r\n                </LinkContainer>\r\n              )}\r\n              {userInfo && userInfo.isAdmin && (\r\n                <NavDropdown title='Admin' id='adminmenu'>\r\n                  <LinkContainer to='/admin/userlist'>\r\n                    <NavDropdown.Item>Users</NavDropdown.Item>\r\n                  </LinkContainer>\r\n                  <LinkContainer to='/admin/productlist'>\r\n                    <NavDropdown.Item>Products</NavDropdown.Item>\r\n                  </LinkContainer>\r\n                  <LinkContainer to='/admin/orderlist'>\r\n                    <NavDropdown.Item>Orders</NavDropdown.Item>\r\n                  </LinkContainer>\r\n                </NavDropdown>\r\n              )}\r\n            </Nav>\r\n          </Navbar.Collapse>\r\n        </Container>\r\n      </Navbar>\r\n    </header>\r\n  )\r\n}\r\n\r\nexport default Header\r\n\r\n\r\n","import React from 'react'\r\nimport { Container, Row, Col } from 'react-bootstrap'\r\n\r\nconst Footer = () => {\r\n  return (\r\n    <footer>\r\n      <Container>\r\n        <Row>\r\n          <Col className='text-center py-3'>Copyright &copy;  Yazh SuperMarket</Col>\r\n        </Row>\r\n      </Container>\r\n    </footer>\r\n  )\r\n}\r\n\r\nexport default Footer\r\n\r\n","import React from 'react'\r\n\r\nconst Rating = ({ value, text, color }) => {\r\n  return (\r\n    <div className='rating'>\r\n      <span>\r\n        <i\r\n          style={{ color }}\r\n          className={\r\n            value >= 1\r\n              ? 'fas fa-star'\r\n              : value >= 0.5\r\n              ? 'fas fa-star-half-alt'\r\n              : 'far fa-star'\r\n          }\r\n        ></i>\r\n      </span>\r\n      <span>\r\n        <i\r\n          style={{ color }}\r\n          className={\r\n            value >= 2\r\n              ? 'fas fa-star'\r\n              : value >= 1.5\r\n              ? 'fas fa-star-half-alt'\r\n              : 'far fa-star'\r\n          }\r\n        ></i>\r\n      </span>\r\n      <span>\r\n        <i\r\n          style={{ color }}\r\n          className={\r\n            value >= 3\r\n              ? 'fas fa-star'\r\n              : value >= 2.5\r\n              ? 'fas fa-star-half-alt'\r\n              : 'far fa-star'\r\n          }\r\n        ></i>\r\n      </span>\r\n      <span>\r\n        <i\r\n          style={{ color }}\r\n          className={\r\n            value >= 4\r\n              ? 'fas fa-star'\r\n              : value >= 3.5\r\n              ? 'fas fa-star-half-alt'\r\n              : 'far fa-star'\r\n          }\r\n        ></i>\r\n      </span>\r\n      <span>\r\n        <i\r\n          style={{ color }}\r\n          className={\r\n            value >= 5\r\n              ? 'fas fa-star'\r\n              : value >= 4.5\r\n              ? 'fas fa-star-half-alt'\r\n              : 'far fa-star'\r\n          }\r\n        ></i>\r\n      </span>\r\n      <span>{text && text}</span>\r\n    </div>\r\n  )\r\n}\r\n\r\nRating.defaultProps = {\r\n  color: '#f8e825',\r\n}\r\n\r\nexport default Rating\r\n\r\n","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Card } from 'react-bootstrap'\r\nimport Rating from './Rating'\r\n\r\nconst Product = ({ product }) => {\r\n  return (\r\n    <Card className='my-3 p-3 rounded'style={{backgroundColor:'#f4f6f6'}}>\r\n      <Link to={`/product/${product._id}`} >\r\n        <Card.Img style={{border:'2px ridge #e8daef'}}  src={product.image} variant='top' />\r\n      </Link>\r\n\r\n      <Card.Body style={{backgroundColor:'white'}}>\r\n        <Link to={`/product/${product._id}`}>\r\n          <Card.Title as='div'>\r\n            <strong>{product.name}</strong>\r\n          </Card.Title>\r\n        </Link>\r\n\r\n        <Card.Text as='div'>\r\n          <Rating\r\n            value={product.rating}\r\n            text={`${product.numReviews} reviews`}\r\n          />\r\n        </Card.Text>\r\n\r\n        <Card.Text as='h3'>₹{product.price}</Card.Text>\r\n      </Card.Body>\r\n    </Card>\r\n  )\r\n}\r\n\r\nexport default Product\r\n\r\n","import React from 'react'\r\nimport { Alert } from 'react-bootstrap'\r\n\r\nconst Message = ({ variant, children }) => {\r\n  return <Alert variant={variant}>{children}</Alert>\r\n}\r\n\r\nMessage.defaultProps = {\r\n  variant: 'info',\r\n}\r\n\r\nexport default Message\r\n\r\n","import React from 'react'\r\nimport { Spinner } from 'react-bootstrap'\r\n\r\nconst Loader = () => {\r\n  return (\r\n    <Spinner\r\n      animation='border'\r\n      role='status'\r\n      style={{\r\n        width: '100px',\r\n        height: '100px',\r\n        margin: 'auto',\r\n        display: 'block',\r\n      }}\r\n    >\r\n      <span className='sr-only'>Loading...</span>\r\n    </Spinner>\r\n  )\r\n}\r\n\r\nexport default Loader\r\n\r\n","import React from 'react'\r\nimport { Pagination } from 'react-bootstrap'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\n\r\nconst Paginate = ({ pages, page, isAdmin = false, keyword = '' }) => {\r\n  return (\r\n    pages > 1 && (\r\n      <Pagination>\r\n        {[...Array(pages).keys()].map((x) => (\r\n          <LinkContainer\r\n            key={x + 1}\r\n            to={\r\n              !isAdmin\r\n                ? keyword\r\n                ? `/search/${keyword}/page/${x + 1}`\r\n                : `/page/${x + 1}`\r\n              : `/admin/productlist/${x + 1}`\r\n            }\r\n          >\r\n            <Pagination.Item active={x + 1 === page}>{x + 1}</Pagination.Item>\r\n          </LinkContainer>\r\n        ))}\r\n      </Pagination>\r\n    )\r\n  )\r\n}\r\n\r\nexport default Paginate\r\n\r\n","import axios from 'axios'\r\nimport {\r\n  PRODUCT_LIST_REQUEST,\r\n  PRODUCT_LIST_SUCCESS,\r\n  PRODUCT_LIST_FAIL,\r\n  PRODUCT_DETAILS_REQUEST,\r\n  PRODUCT_DETAILS_SUCCESS,\r\n  PRODUCT_DETAILS_FAIL,\r\n  PRODUCT_DELETE_SUCCESS,\r\n  PRODUCT_DELETE_REQUEST,\r\n  PRODUCT_DELETE_FAIL,\r\n  PRODUCT_CREATE_REQUEST,\r\n  PRODUCT_CREATE_SUCCESS,\r\n  PRODUCT_CREATE_FAIL,\r\n  PRODUCT_UPDATE_REQUEST,\r\n  PRODUCT_UPDATE_SUCCESS,\r\n  PRODUCT_UPDATE_FAIL,\r\n  PRODUCT_CREATE_REVIEW_REQUEST,\r\n  PRODUCT_CREATE_REVIEW_SUCCESS,\r\n  PRODUCT_CREATE_REVIEW_FAIL,\r\n  PRODUCT_TOP_REQUEST,\r\n  PRODUCT_TOP_SUCCESS,\r\n  PRODUCT_TOP_FAIL,\r\n} from '../constants/productConstants'\r\nimport { logout } from './userActions'\r\n\r\nexport const listProducts = (keyword = '', pageNumber = '') => async (\r\n  dispatch\r\n) => {\r\n  try {\r\n    dispatch({ type: PRODUCT_LIST_REQUEST })\r\n\r\n    const { data } = await axios.get(\r\n      `/api/products?keyword=${keyword}&pageNumber=${pageNumber}`\r\n    )\r\n\r\n    dispatch({\r\n      type: PRODUCT_LIST_SUCCESS,\r\n      payload: data,\r\n    })\r\n  } catch (error) {\r\n    dispatch({\r\n      type: PRODUCT_LIST_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    })\r\n  }\r\n}\r\n\r\nexport const listProductDetails = (id) => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: PRODUCT_DETAILS_REQUEST })\r\n\r\n    const { data } = await axios.get(`/api/products/${id}`)\r\n\r\n    dispatch({\r\n      type: PRODUCT_DETAILS_SUCCESS,\r\n      payload: data,\r\n    })\r\n  } catch (error) {\r\n    dispatch({\r\n      type: PRODUCT_DETAILS_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    })\r\n  }\r\n}\r\n\r\nexport const deleteProduct = (id) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: PRODUCT_DELETE_REQUEST,\r\n    })\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState()\r\n\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    }\r\n\r\n    await axios.delete(`/api/products/${id}`, config)\r\n\r\n    dispatch({\r\n      type: PRODUCT_DELETE_SUCCESS,\r\n    })\r\n  } catch (error) {\r\n    const message =\r\n      error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message\r\n    if (message === 'Not authorized, token failed') {\r\n      dispatch(logout())\r\n    }\r\n    dispatch({\r\n      type: PRODUCT_DELETE_FAIL,\r\n      payload: message,\r\n    })\r\n  }\r\n}\r\n\r\nexport const createProduct = () => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: PRODUCT_CREATE_REQUEST,\r\n    })\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState()\r\n\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    }\r\n\r\n    const { data } = await axios.post(`/api/products`, {}, config)\r\n\r\n    dispatch({\r\n      type: PRODUCT_CREATE_SUCCESS,\r\n      payload: data,\r\n    })\r\n  } catch (error) {\r\n    const message =\r\n      error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message\r\n    if (message === 'Not authorized, token failed') {\r\n      dispatch(logout())\r\n    }\r\n    dispatch({\r\n      type: PRODUCT_CREATE_FAIL,\r\n      payload: message,\r\n    })\r\n  }\r\n}\r\n\r\nexport const updateProduct = (product) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: PRODUCT_UPDATE_REQUEST,\r\n    })\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState()\r\n\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    }\r\n\r\n    const { data } = await axios.put(\r\n      `/api/products/${product._id}`,\r\n      product,\r\n      config\r\n    )\r\n\r\n    dispatch({\r\n      type: PRODUCT_UPDATE_SUCCESS,\r\n      payload: data,\r\n    })\r\n  } catch (error) {\r\n    const message =\r\n      error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message\r\n    if (message === 'Not authorized, token failed') {\r\n      dispatch(logout())\r\n    }\r\n    dispatch({\r\n      type: PRODUCT_UPDATE_FAIL,\r\n      payload: message,\r\n    })\r\n  }\r\n}\r\n\r\nexport const createProductReview = (productId, review) => async (\r\n  dispatch,\r\n  getState\r\n) => {\r\n  try {\r\n    dispatch({\r\n      type: PRODUCT_CREATE_REVIEW_REQUEST,\r\n    })\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState()\r\n\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    }\r\n\r\n    await axios.post(`/api/products/${productId}/reviews`, review, config)\r\n\r\n    dispatch({\r\n      type: PRODUCT_CREATE_REVIEW_SUCCESS,\r\n    })\r\n  } catch (error) {\r\n    const message =\r\n      error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message\r\n    if (message === 'Not authorized, token failed') {\r\n      dispatch(logout())\r\n    }\r\n    dispatch({\r\n      type: PRODUCT_CREATE_REVIEW_FAIL,\r\n      payload: message,\r\n    })\r\n  }\r\n}\r\n\r\nexport const listTopProducts = () => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: PRODUCT_TOP_REQUEST })\r\n\r\n    const { data } = await axios.get(`/api/products/top`)\r\n\r\n    dispatch({\r\n      type: PRODUCT_TOP_SUCCESS,\r\n      payload: data,\r\n    })\r\n  } catch (error) {\r\n    dispatch({\r\n      type: PRODUCT_TOP_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    })\r\n  }\r\n}\r\n\r\n","import React, { useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Carousel, Image } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Loader from './Loader'\r\nimport Message from './Message'\r\nimport { listTopProducts } from '../actions/productActions'\r\n\r\nconst ProductCarousel = () => {\r\n  const dispatch = useDispatch()\r\n\r\n  const productTopRated = useSelector((state) => state.productTopRated)\r\n  const { loading, error, products } = productTopRated\r\n\r\n  useEffect(() => {\r\n    dispatch(listTopProducts())\r\n  }, [dispatch])\r\n\r\n  return loading ? (\r\n    <Loader />\r\n  ) : error ? (\r\n    <Message variant='danger'>{error}</Message>\r\n  ) : (<><h1 className='text-center'>Currently Available Products</h1>\r\n  <Carousel pause='hover' className='' style={{backgroundColor:'#42ecb6'}}>\r\n    \r\n      {products.map((product) => (\r\n        <Carousel.Item key={product._id}>\r\n          <Link to={`/product/${product._id}`}>\r\n            <Image src={product.image} alt={product.name} fluid />\r\n            <Carousel.Caption className='carousel-caption'>\r\n              <h2>\r\n                {product.name} (₹{product.price})\r\n              </h2>\r\n            </Carousel.Caption>\r\n          </Link>\r\n        </Carousel.Item>\r\n      ))}\r\n    </Carousel>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default ProductCarousel\r\n\r\n","import React from 'react'\r\nimport { Helmet } from 'react-helmet'\r\n\r\nconst Meta = ({ title, description, keywords }) => {\r\n  return (\r\n    <Helmet>\r\n      <title>{title}</title>\r\n      <meta name='description' content={description} />\r\n      <meta name='keyword' content={keywords} />\r\n    </Helmet>\r\n  )\r\n}\r\n\r\nMeta.defaultProps = {\r\n  title: 'Welcome To Grocery Store',\r\n  description: 'We sell the best products for cheap',\r\n  keywords: 'Grocery, Home needs',\r\n}\r\n\r\nexport default Meta\r\n\r\n","import React, { useEffect, useState } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Row, Col } from 'react-bootstrap'\r\nimport Product from '../components/Product'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport Paginate from '../components/Paginate'\r\nimport ProductCarousel from '../components/ProductCarousel'\r\nimport Meta from '../components/Meta'\r\nimport { listProducts } from '../actions/productActions'\r\nimport axios from 'axios'\r\nconst HomeScreen = ({ match }) => {\r\n  const keyword = match.params.keyword\r\n  const [pdcollection,setpdcollection]=useState([])\r\n  const pageNumber = match.params.pageNumber || 1\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  const productList = useSelector((state) => state.productList)\r\n  const { loading, error, products, page, pages } = productList\r\n\r\n  useEffect(()=>{\r\n    axios.get('https://online-supermarket1-1.onrender.com/productcollection')\r\n    .then((res)=>{\r\n      \r\n      setpdcollection(res.data)\r\n    })\r\n    .catch((err)=>console.log(err))\r\n  },[])\r\n\r\n  useEffect(() => {\r\n    dispatch(listProducts(keyword, pageNumber))\r\n  }, [dispatch, keyword, pageNumber])\r\n\r\n  \r\n  function atta(pds){\r\n   return pds.category === 'Atta & Rice'\r\n  }\r\n\r\n  function bakes(pds){\r\n    return pds.category === 'Bakery,Cakes, dairy'\r\n   }\r\n\r\n   function Chocolates(pds){\r\n    return pds.category === 'Chocolates & Ice Cream'\r\n   }\r\n\r\n   function dals(pds){\r\n    return pds.category === 'Dals & Sugar'\r\n   }\r\n\r\n   function eggs(pds){\r\n    return pds.category === 'Eggs,Meat & Fish'\r\n   }\r\n\r\n   function grocery(pds){\r\n    return pds.category === 'Grocery'\r\n   }\r\n\r\n   function fruirs(pds){\r\n    return pds.category === 'Fruits & Vegitables'\r\n   }\r\n   \r\n   function oil(pds){\r\n    return pds.category === 'Oils & Dry Fruits'\r\n   }\r\n\r\n\r\n  return (\r\n    <>\r\n      <Meta />\r\n      {!keyword ? (\r\n        <ProductCarousel />\r\n      ) : (\r\n        <Link to='/' className='btn btn-light'>\r\n          Go Back\r\n        </Link>\r\n      )}\r\n      <h1 className='text-center'>Latest Products</h1>\r\n      {loading ? (\r\n        <Loader />\r\n      ) : error ? (\r\n        <Message variant='danger'>{error}</Message>\r\n      ) : (\r\n        <>\r\n           {/* <h1 style={{color:'blue'}}>Atta & Rice</h1> */}\r\n          <Row>\r\n            {products.map((product) => (\r\n              <Col key={product._id} sm={12} md={6} lg={4} xl={3}>\r\n                <Product product={product} />\r\n              </Col>\r\n            ))}\r\n             \r\n                {/* {pdcollection.filter(atta).map((product)=> (\r\n                 \r\n              <Col key={product._id} sm={12} md={6} lg={4} xl={3}>\r\n                <Product product={product} />\r\n              </Col>\r\n              \r\n              ))} */}\r\n\r\n          </Row>\r\n  \r\n          {/* <h1 style={{color:'blue'}}>Bakery,Cakes and dairy</h1>\r\n          <Row>\r\n                        \r\n                {pdcollection.filter(bakes).map((product)=> (\r\n                 \r\n              <Col key={product._id} sm={12} md={6} lg={4} xl={3}>\r\n                <Product product={product} />\r\n              </Col>\r\n              \r\n              ))}\r\n\r\n          </Row>\r\n\r\n          <h1 style={{color:'blue'}}>Chocolates & Ice Cream</h1>\r\n          <Row>\r\n                        \r\n                {pdcollection.filter(Chocolates).map((product)=> (\r\n                 \r\n              <Col key={product._id} sm={12} md={6} lg={4} xl={3}>\r\n                <Product product={product} />\r\n              </Col>\r\n              \r\n              ))}\r\n\r\n          </Row>\r\n\r\n          <h1 style={{color:'blue'}}>Dals & Sugar</h1>\r\n          <Row>\r\n                        \r\n                {pdcollection.filter(dals).map((product)=> (\r\n                 \r\n              <Col key={product._id} sm={12} md={6} lg={4} xl={3}>\r\n                <Product product={product} />\r\n              </Col>\r\n              \r\n              ))}\r\n\r\n          </Row>\r\n\r\n          <h1 style={{color:'blue'}}>Eggs,Meat & Fish</h1>\r\n          <Row>\r\n                        \r\n                {pdcollection.filter(eggs).map((product)=> (\r\n                 \r\n              <Col key={product._id} sm={12} md={6} lg={4} xl={3}>\r\n                <Product product={product} />\r\n              </Col>\r\n              \r\n              ))}\r\n\r\n          </Row>\r\n\r\n          <h1 style={{color:'blue'}}>Grocery</h1>\r\n          <Row>\r\n                        \r\n                {pdcollection.filter(grocery).map((product)=> (\r\n                 \r\n              <Col key={product._id} sm={12} md={6} lg={4} xl={3}>\r\n                <Product product={product} />\r\n              </Col>\r\n              \r\n              ))}\r\n\r\n          </Row>\r\n\r\n          <h1 style={{color:'blue'}}>Fruits & Vegitables</h1>\r\n          <Row>\r\n                        \r\n                {pdcollection.filter(fruirs).map((product)=> (\r\n                 \r\n              <Col key={product._id} sm={12} md={6} lg={4} xl={3}>\r\n                <Product product={product} />\r\n              </Col>\r\n              \r\n              ))}\r\n\r\n          </Row>\r\n\r\n          <h1 style={{color:'blue'}}>Oils & Dry Fruits</h1>\r\n          <Row>\r\n                        \r\n                {pdcollection.filter(oil).map((product)=> (\r\n                 \r\n              <Col key={product._id} sm={12} md={6} lg={4} xl={3}>\r\n                <Product product={product} />\r\n              </Col>\r\n              \r\n              ))}\r\n\r\n          </Row>\r\n */}\r\n\r\n\r\n          <Paginate\r\n            pages={pages}\r\n            page={page}\r\n            keyword={keyword ? keyword : ''}\r\n          />\r\n        </>\r\n      )}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default HomeScreen\r\n\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Row, Col, Image, ListGroup, Card, Button, Form } from 'react-bootstrap'\r\nimport Rating from '../components/Rating'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport Meta from '../components/Meta'\r\nimport {\r\n  listProductDetails,\r\n  createProductReview,\r\n} from '../actions/productActions'\r\nimport { PRODUCT_CREATE_REVIEW_RESET } from '../constants/productConstants'\r\n\r\nconst ProductScreen = ({ history, match }) => {\r\n  const [qty, setQty] = useState(1)\r\n  const [rating, setRating] = useState(0)\r\n  const [comment, setComment] = useState('')\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  const productDetails = useSelector((state) => state.productDetails)\r\n  const { loading, error, product } = productDetails\r\n\r\n  const userLogin = useSelector((state) => state.userLogin)\r\n  const { userInfo } = userLogin\r\n\r\n  const productReviewCreate = useSelector((state) => state.productReviewCreate)\r\n  const {\r\n    success: successProductReview,\r\n    loading: loadingProductReview,\r\n    error: errorProductReview,\r\n  } = productReviewCreate\r\n\r\n  useEffect(() => {\r\n    if (successProductReview) {\r\n      setRating(0)\r\n      setComment('')\r\n    }\r\n    if (!product._id || product._id !== match.params.id) {\r\n      dispatch(listProductDetails(match.params.id))\r\n      dispatch({ type: PRODUCT_CREATE_REVIEW_RESET })\r\n    }\r\n  }, [dispatch, match, successProductReview])\r\n\r\n  const addToCartHandler = () => {\r\n    history.push(`/cart/${match.params.id}?qty=${qty}`)\r\n  }\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault()\r\n    dispatch(\r\n      createProductReview(match.params.id, {\r\n        rating,\r\n        comment,\r\n      })\r\n    )\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Link className='btn btn-light my-3' to='/'>\r\n        Go Back\r\n      </Link>\r\n      {loading ? (\r\n        <Loader />\r\n      ) : error ? (\r\n        <Message variant='danger'>{error}</Message>\r\n      ) : (\r\n        <>\r\n          <Meta title={product.name} />\r\n          <Row>\r\n            <Col md={6}>\r\n              <Image src={product.image} alt={product.name} fluid />\r\n            </Col>\r\n            <Col md={3}>\r\n              <ListGroup variant='flush'>\r\n                <ListGroup.Item>\r\n                  <h3>{product.name}</h3>\r\n                </ListGroup.Item>\r\n                <ListGroup.Item>\r\n                  <Rating\r\n                    value={product.rating}\r\n                    text={`${product.numReviews} reviews`}\r\n                  />\r\n                </ListGroup.Item>\r\n                <ListGroup.Item>Price: ₹{product.price}</ListGroup.Item>\r\n                <ListGroup.Item>\r\n                  Description: {product.description}\r\n                </ListGroup.Item>\r\n              </ListGroup>\r\n            </Col>\r\n            <Col md={3}>\r\n              <Card>\r\n                <ListGroup variant='flush'>\r\n                  <ListGroup.Item>\r\n                    <Row>\r\n                      <Col>Price:</Col>\r\n                      <Col>\r\n                        <strong>₹{product.price}</strong>\r\n                      </Col>\r\n                    </Row>\r\n                  </ListGroup.Item>\r\n\r\n                  <ListGroup.Item>\r\n                    <Row>\r\n                      <Col>Status:</Col>\r\n                      <Col>\r\n                        {product.countInStock > 0 ? 'In Stock' : 'Out Of Stock'}\r\n                      </Col>\r\n                    </Row>\r\n                  </ListGroup.Item>\r\n\r\n                  {product.countInStock > 0 && (\r\n                    <ListGroup.Item>\r\n                      <Row>\r\n                        <Col>Qty</Col>\r\n                        <Col>\r\n                          <Form.Control\r\n                            as='select'\r\n                            value={qty}\r\n                            onChange={(e) => setQty(e.target.value)}\r\n                          >\r\n                            {[...Array(product.countInStock).keys()].map(\r\n                              (x) => (\r\n                                <option key={x + 1} value={x + 1}>\r\n                                  {x + 1}\r\n                                </option>\r\n                              )\r\n                            )}\r\n                          </Form.Control>\r\n                        </Col>\r\n                      </Row>\r\n                    </ListGroup.Item>\r\n                  )}\r\n\r\n                  <ListGroup.Item>\r\n                    <Button\r\n                      onClick={addToCartHandler}\r\n                      className='btn-block'\r\n                      type='button'\r\n                      disabled={product.countInStock === 0}\r\n                    >\r\n                      Add To Cart\r\n                    </Button>\r\n                  </ListGroup.Item>\r\n                </ListGroup>\r\n              </Card>\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col md={6}>\r\n              <h2>Reviews</h2>\r\n              {product.reviews.length === 0 && <Message>No Reviews</Message>}\r\n              <ListGroup variant='flush'>\r\n                {product.reviews.map((review) => (\r\n                  <ListGroup.Item key={review._id}>\r\n                    <strong>{review.name}</strong>\r\n                    <Rating value={review.rating} />\r\n                    <p>{review.createdAt.substring(0, 10)}</p>\r\n                    <p>{review.comment}</p>\r\n                  </ListGroup.Item>\r\n                ))}\r\n                <ListGroup.Item>\r\n                  <h2>Write a Customer Review</h2>\r\n                  {successProductReview && (\r\n                    <Message variant='success'>\r\n                      Review submitted successfully\r\n                    </Message>\r\n                  )}\r\n                  {loadingProductReview && <Loader />}\r\n                  {errorProductReview && (\r\n                    <Message variant='danger'>{errorProductReview}</Message>\r\n                  )}\r\n                  {userInfo ? (\r\n                    <Form onSubmit={submitHandler}>\r\n                      <Form.Group controlId='rating'>\r\n                        <Form.Label>Rating</Form.Label>\r\n                        <Form.Control\r\n                          as='select'\r\n                          value={rating}\r\n                          onChange={(e) => setRating(e.target.value)}\r\n                        >\r\n                          <option value=''>Select...</option>\r\n                          <option value='1'>1 - Poor</option>\r\n                          <option value='2'>2 - Fair</option>\r\n                          <option value='3'>3 - Good</option>\r\n                          <option value='4'>4 - Very Good</option>\r\n                          <option value='5'>5 - Excellent</option>\r\n                        </Form.Control>\r\n                      </Form.Group>\r\n                      <Form.Group controlId='comment'>\r\n                        <Form.Label>Comment</Form.Label>\r\n                        <Form.Control\r\n                          as='textarea'\r\n                          row='3'\r\n                          value={comment}\r\n                          onChange={(e) => setComment(e.target.value)}\r\n                        ></Form.Control>\r\n                      </Form.Group>\r\n                      <Button\r\n                        disabled={loadingProductReview}\r\n                        type='submit'\r\n                        variant='primary'\r\n                      >\r\n                        Submit\r\n                      </Button>\r\n                    </Form>\r\n                  ) : (\r\n                    <Message>\r\n                      Please <Link to='/login'>sign in</Link> to write a review{' '}\r\n                    </Message>\r\n                  )}\r\n                </ListGroup.Item>\r\n              </ListGroup>\r\n            </Col>\r\n          </Row>\r\n        </>\r\n      )}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default ProductScreen\r\n","import axios from 'axios'\r\nimport {\r\n  CART_ADD_ITEM,\r\n  CART_REMOVE_ITEM,\r\n  CART_SAVE_SHIPPING_ADDRESS,\r\n  CART_SAVE_PAYMENT_METHOD,\r\n} from '../constants/cartConstants'\r\n\r\nexport const addToCart = (id, qty) => async (dispatch, getState) => {\r\n  const { data } = await axios.get(`/api/products/${id}`)\r\n\r\n  dispatch({\r\n    type: CART_ADD_ITEM,\r\n    payload: {\r\n      product: data._id,\r\n      name: data.name,\r\n      image: data.image,\r\n      price: data.price,\r\n      countInStock: data.countInStock,\r\n      qty,\r\n    },\r\n  })\r\n\r\n  localStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems))\r\n}\r\n\r\nexport const removeFromCart = (id) => (dispatch, getState) => {\r\n  dispatch({\r\n    type: CART_REMOVE_ITEM,\r\n    payload: id,\r\n  })\r\n\r\n  localStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems))\r\n}\r\n\r\nexport const saveShippingAddress = (data) => (dispatch) => {\r\n  dispatch({\r\n    type: CART_SAVE_SHIPPING_ADDRESS,\r\n    payload: data,\r\n  })\r\n\r\n  localStorage.setItem('shippingAddress', JSON.stringify(data))\r\n}\r\n\r\nexport const savePaymentMethod = (data) => (dispatch) => {\r\n  dispatch({\r\n    type: CART_SAVE_PAYMENT_METHOD,\r\n    payload: data,\r\n  })\r\n\r\n  localStorage.setItem('paymentMethod', JSON.stringify(data))\r\n}\r\n\r\n","import React, { useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Row, Col, ListGroup, Image, Form, Button, Card } from 'react-bootstrap'\r\nimport Message from '../components/Message'\r\nimport { addToCart, removeFromCart } from '../actions/cartActions'\r\n\r\nconst CartScreen = ({ match, location, history }) => {\r\n  const productId = match.params.id\r\n\r\n  const qty = location.search ? Number(location.search.split('=')[1]) : 1\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  const cart = useSelector((state) => state.cart)\r\n  const { cartItems } = cart\r\n\r\n  useEffect(() => {\r\n    if (productId) {\r\n      dispatch(addToCart(productId, qty))\r\n    }\r\n  }, [dispatch, productId, qty])\r\n\r\n  const removeFromCartHandler = (id) => {\r\n    dispatch(removeFromCart(id))\r\n  }\r\n\r\n  const checkoutHandler = () => {\r\n    history.push('/login?redirect=shipping')\r\n  }\r\n\r\n  return (\r\n    <Row>\r\n      <Col md={8}>\r\n        <h1>Shopping Cart</h1>\r\n        {cartItems.length === 0 ? (\r\n          <Message>\r\n            Your cart is empty <Link to='/'>Go Back</Link>\r\n          </Message>\r\n        ) : (\r\n          <ListGroup variant='flush'>\r\n            {cartItems.map((item) => (\r\n              <ListGroup.Item key={item.product}>\r\n                <Row>\r\n                  <Col md={2}>\r\n                    <Image src={item.image} alt={item.name} fluid rounded />\r\n                  </Col>\r\n                  <Col md={3}>\r\n                    <Link to={`/product/${item.product}`}>{item.name}</Link>\r\n                  </Col>\r\n                  <Col md={2}>₹{item.price}</Col>\r\n                  <Col md={2}>\r\n                    <Form.Control\r\n                      as='select'\r\n                      value={item.qty}\r\n                      onChange={(e) =>\r\n                        dispatch(\r\n                          addToCart(item.product, Number(e.target.value))\r\n                        )\r\n                      }\r\n                    >\r\n                      {[...Array(item.countInStock).keys()].map((x) => (\r\n                        <option key={x + 1} value={x + 1}>\r\n                          {x + 1}\r\n                        </option>\r\n                      ))}\r\n                    </Form.Control>\r\n                  </Col>\r\n                  <Col md={2}>\r\n                    <Button\r\n                      type='button'\r\n                      variant='light'\r\n                      onClick={() => removeFromCartHandler(item.product)}\r\n                    >\r\n                      <i className='fas fa-trash'></i>\r\n                    </Button>\r\n                  </Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n            ))}\r\n          </ListGroup>\r\n        )}\r\n      </Col>\r\n      <Col md={4}>\r\n        <Card>\r\n          <ListGroup variant='flush'>\r\n            <ListGroup.Item>\r\n              <h2>\r\n                Subtotal ({cartItems.reduce((acc, item) => acc + item.qty, 0)})\r\n                items\r\n              </h2>\r\n              ₹\r\n              {cartItems\r\n                .reduce((acc, item) => acc + item.qty * item.price, 0)\r\n                .toFixed(2)}\r\n            </ListGroup.Item>\r\n            <ListGroup.Item>\r\n              <Button\r\n                type='button'\r\n                className='btn-block'\r\n                disabled={cartItems.length === 0}\r\n                onClick={checkoutHandler}\r\n              >\r\n                Proceed To Checkout\r\n              </Button>\r\n            </ListGroup.Item>\r\n          </ListGroup>\r\n        </Card>\r\n      </Col>\r\n    </Row>\r\n  )\r\n}\r\n\r\nexport default CartScreen\r\n\r\n","import React from 'react'\r\nimport { Container, Row, Col } from 'react-bootstrap'\r\n\r\nconst FormContainer = ({ children }) => {\r\n  return (\r\n    <Container>\r\n      <Row className='justify-content-md-center'>\r\n        <Col xs={12} md={6}>\r\n          {children}\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default FormContainer\r\n\r\n\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Form, Button, Row, Col } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport FormContainer from '../components/FormContainer'\r\nimport { login } from '../actions/userActions'\r\n\r\nconst LoginScreen = ({ location, history }) => {\r\n  const [email, setEmail] = useState('')\r\n  const [password, setPassword] = useState('')\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  const userLogin = useSelector((state) => state.userLogin)\r\n  const { loading, error, userInfo } = userLogin\r\n\r\n  const redirect = location.search ? location.search.split('=')[1] : '/'\r\n\r\n  useEffect(() => {\r\n    if (userInfo) {\r\n      history.push(redirect)\r\n    }\r\n  }, [history, userInfo, redirect])\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault()\r\n    dispatch(login(email, password))\r\n  }\r\n\r\n  return (\r\n    <FormContainer>\r\n      <h1>Sign In</h1>\r\n      {error && <Message variant='danger'>{error}</Message>}\r\n      {loading && <Loader />}\r\n      <Form onSubmit={submitHandler}>\r\n        <Form.Group controlId='email'>\r\n          <Form.Label>Email Address</Form.Label>\r\n          <Form.Control\r\n            type='email'\r\n            placeholder='Enter email'\r\n            value={email}\r\n            onChange={(e) => setEmail(e.target.value)}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n\r\n        <Form.Group controlId='password'>\r\n          <Form.Label>Password</Form.Label>\r\n          <Form.Control\r\n            type='password'\r\n            placeholder='Enter password'\r\n            value={password}\r\n            onChange={(e) => setPassword(e.target.value)}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n\r\n        <Button type='submit' variant='primary'>\r\n          Sign In\r\n        </Button>\r\n      </Form>\r\n\r\n      <Row className='py-3'>\r\n        <Col>\r\n          New Customer?{' '}\r\n          <Link to={redirect ? `/register?redirect=${redirect}` : '/register'}>\r\n            Register\r\n          </Link>\r\n        </Col>\r\n      </Row>\r\n    </FormContainer>\r\n  )\r\n}\r\n\r\nexport default LoginScreen\r\n\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Form, Button, Row, Col } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport FormContainer from '../components/FormContainer'\r\nimport { register } from '../actions/userActions'\r\n\r\nconst RegisterScreen = ({ location, history }) => {\r\n  const [name, setName] = useState('')\r\n  const [email, setEmail] = useState('')\r\n  const [password, setPassword] = useState('')\r\n  const [confirmPassword, setConfirmPassword] = useState('')\r\n  const [message, setMessage] = useState(null)\r\n\r\n  \r\n  const dispatch = useDispatch()\r\n\r\n  const userRegister = useSelector((state) => state.userRegister)\r\n  const { loading, error, userInfo } = userRegister\r\n\r\n  const redirect = location.search ? location.search.split('=')[1] : '/'\r\n\r\n  useEffect(() => {\r\n    if (userInfo) {\r\n      history.push(redirect)\r\n    }\r\n  }, [history, userInfo, redirect])\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault()\r\n    if (password !== confirmPassword) {\r\n      setMessage('Passwords do not match')\r\n    } else {\r\n      dispatch(register(name, email, password))\r\n    }\r\n  }\r\n\r\n  return (\r\n    <FormContainer>\r\n      <h1>Sign Up</h1>\r\n      {message && <Message variant='danger'>{message}</Message>}\r\n      {error && <Message variant='danger'>{error}</Message>}\r\n      {loading && <Loader />}\r\n      <Form onSubmit={submitHandler}>\r\n        <Form.Group controlId='name'>\r\n          <Form.Label>Name</Form.Label>\r\n          <Form.Control\r\n            type='name'\r\n            placeholder='Enter name'\r\n            value={name}\r\n            onChange={(e) => setName(e.target.value)}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n\r\n        <Form.Group controlId='email'>\r\n          <Form.Label>Email Address</Form.Label>\r\n          <Form.Control\r\n            type='email'\r\n            placeholder='Enter email'\r\n            value={email}\r\n            onChange={(e) => setEmail(e.target.value)}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n\r\n        <Form.Group controlId='password'>\r\n          <Form.Label>Password</Form.Label>\r\n          <Form.Control\r\n            type='password'\r\n            placeholder='Enter password'\r\n            value={password}\r\n            onChange={(e) => setPassword(e.target.value)}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n\r\n        <Form.Group controlId='confirmPassword'>\r\n          <Form.Label>Confirm Password</Form.Label>\r\n          <Form.Control\r\n            type='password'\r\n            placeholder='Confirm password'\r\n            value={confirmPassword}\r\n            onChange={(e) => setConfirmPassword(e.target.value)}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n\r\n        <Button type='submit' variant='primary'>\r\n          Register\r\n        </Button>\r\n      </Form>\r\n\r\n      <Row className='py-3'>\r\n        <Col>\r\n          Have an Account?{' '}\r\n          <Link to={redirect ? `/login?redirect=${redirect}` : '/login'}>\r\n            Login\r\n          </Link>\r\n        </Col>\r\n      </Row>\r\n    </FormContainer>\r\n  )\r\n}\r\n\r\nexport default RegisterScreen\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Table, Form, Button, Row, Col } from 'react-bootstrap'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport { getUserDetails, updateUserProfile } from '../actions/userActions'\r\nimport { listMyOrders } from '../actions/orderActions'\r\nimport { USER_UPDATE_PROFILE_RESET } from '../constants/userConstants'\r\n\r\nconst ProfileScreen = ({ location, history }) => {\r\n  const [name, setName] = useState('')\r\n  const [email, setEmail] = useState('')\r\n  const [password, setPassword] = useState('')\r\n  const [confirmPassword, setConfirmPassword] = useState('')\r\n  const [message, setMessage] = useState(null)\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  const userDetails = useSelector((state) => state.userDetails)\r\n  const { loading, error, user } = userDetails\r\n\r\n  const userLogin = useSelector((state) => state.userLogin)\r\n  const { userInfo } = userLogin\r\n\r\n  const userUpdateProfile = useSelector((state) => state.userUpdateProfile)\r\n  const { success } = userUpdateProfile\r\n\r\n  const orderListMy = useSelector((state) => state.orderListMy)\r\n  const { loading: loadingOrders, error: errorOrders, orders } = orderListMy\r\n\r\n  useEffect(() => {\r\n    if (!userInfo) {\r\n      history.push('/login')\r\n    } else {\r\n      if (!user || !user.name || success) {\r\n        dispatch({ type: USER_UPDATE_PROFILE_RESET })\r\n        dispatch(getUserDetails('profile'))\r\n        dispatch(listMyOrders())\r\n      } else {\r\n        setName(user.name)\r\n        setEmail(user.email)\r\n      }\r\n    }\r\n  }, [dispatch, history, userInfo, user, success])\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault()\r\n    if (password !== confirmPassword) {\r\n      setMessage('Passwords do not match')\r\n    } else {\r\n      dispatch(updateUserProfile({ id: user._id, name, email, password }))\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Row>\r\n      <Col md={3}>\r\n        <h2>User Profile</h2>\r\n        {message && <Message variant='danger'>{message}</Message>}\r\n        {}\r\n        {success && <Message variant='success'>Profile Updated</Message>}\r\n        {loading ? (\r\n          <Loader />\r\n        ) : error ? (\r\n          <Message variant='danger'>{error}</Message>\r\n        ) : (\r\n          <Form onSubmit={submitHandler}>\r\n            <Form.Group controlId='name'>\r\n              <Form.Label>Name</Form.Label>\r\n              <Form.Control\r\n                type='name'\r\n                placeholder='Enter name'\r\n                value={name}\r\n                onChange={(e) => setName(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId='email'>\r\n              <Form.Label>Email Address</Form.Label>\r\n              <Form.Control\r\n                type='email'\r\n                placeholder='Enter email'\r\n                value={email}\r\n                onChange={(e) => setEmail(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId='password'>\r\n              <Form.Label>Password</Form.Label>\r\n              <Form.Control\r\n                type='password'\r\n                placeholder='Enter password'\r\n                value={password}\r\n                onChange={(e) => setPassword(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId='confirmPassword'>\r\n              <Form.Label>Confirm Password</Form.Label>\r\n              <Form.Control\r\n                type='password'\r\n                placeholder='Confirm password'\r\n                value={confirmPassword}\r\n                onChange={(e) => setConfirmPassword(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Button type='submit' variant='primary'>\r\n              Update\r\n            </Button>\r\n          </Form>\r\n        )}\r\n      </Col>\r\n      <Col md={9}>\r\n        <h2>My Orders</h2>\r\n        {loadingOrders ? (\r\n          <Loader />\r\n        ) : errorOrders ? (\r\n          <Message variant='danger'>{errorOrders}</Message>\r\n        ) : (\r\n          <Table striped bordered hover responsive className='table-sm'>\r\n            <thead>\r\n              <tr>\r\n                <th>ID</th>\r\n                <th>DATE</th>\r\n                <th>TOTAL</th>\r\n                <th>PAID</th>\r\n                <th>DELIVERED</th>\r\n                <th></th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {orders.map((order) => (\r\n                <tr key={order._id}>\r\n                  <td>{order._id}</td>\r\n                  <td>{order.createdAt.substring(0, 10)}</td>\r\n                  <td>{order.totalPrice}</td>\r\n                  <td>\r\n                    {order.isPaid ? (\r\n                      order.paidAt.substring(0, 10)\r\n                    ) : (\r\n                      <i className='fas fa-times' style={{ color: 'red' }}></i>\r\n                    )}\r\n                  </td>\r\n                  <td>\r\n                    {order.isDelivered ? (\r\n                      order.deliveredAt.substring(0, 10)\r\n                    ) : (\r\n                      <i className='fas fa-times' style={{ color: 'red' }}></i>\r\n                    )}\r\n                  </td>\r\n                  <td>\r\n                    <LinkContainer to={`/order/${order._id}`}>\r\n                      <Button className='btn-sm' variant='light'>\r\n                        Details\r\n                      </Button>\r\n                    </LinkContainer>\r\n                  </td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </Table>\r\n        )}\r\n      </Col>\r\n    </Row>\r\n  )\r\n}\r\n\r\nexport default ProfileScreen\r\n","import axios from 'axios'\r\nimport { CART_CLEAR_ITEMS } from '../constants/cartConstants'\r\nimport {\r\n  ORDER_CREATE_REQUEST,\r\n  ORDER_CREATE_SUCCESS,\r\n  ORDER_CREATE_FAIL,\r\n  ORDER_DETAILS_FAIL,\r\n  ORDER_DETAILS_SUCCESS,\r\n  ORDER_DETAILS_REQUEST,\r\n  ORDER_PAY_FAIL,\r\n  ORDER_PAY_SUCCESS,\r\n  ORDER_PAY_REQUEST,\r\n  ORDER_LIST_MY_REQUEST,\r\n  ORDER_LIST_MY_SUCCESS,\r\n  ORDER_LIST_MY_FAIL,\r\n  ORDER_LIST_FAIL,\r\n  ORDER_LIST_SUCCESS,\r\n  ORDER_LIST_REQUEST,\r\n  ORDER_DELIVER_FAIL,\r\n  ORDER_DELIVER_SUCCESS,\r\n  ORDER_DELIVER_REQUEST,\r\n} from '../constants/orderConstants'\r\nimport { logout } from './userActions'\r\n\r\nexport const createOrder = (order) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: ORDER_CREATE_REQUEST,\r\n    })\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState()\r\n\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    }\r\n\r\n    const { data } = await axios.post(`/api/orders`, order, config)\r\n\r\n    dispatch({\r\n      type: ORDER_CREATE_SUCCESS,\r\n      payload: data,\r\n    })\r\n    dispatch({\r\n      type: CART_CLEAR_ITEMS,\r\n      payload: data,\r\n    })\r\n    localStorage.removeItem('cartItems')\r\n  } catch (error) {\r\n    const message =\r\n      error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message\r\n    if (message === 'Not authorized, token failed') {\r\n      dispatch(logout())\r\n    }\r\n    dispatch({\r\n      type: ORDER_CREATE_FAIL,\r\n      payload: message,\r\n    })\r\n  }\r\n}\r\n\r\nexport const getOrderDetails = (id) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: ORDER_DETAILS_REQUEST,\r\n    })\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState()\r\n\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    }\r\n\r\n    const { data } = await axios.get(`/api/orders/${id}`, config)\r\n\r\n    dispatch({\r\n      type: ORDER_DETAILS_SUCCESS,\r\n      payload: data,\r\n    })\r\n  } catch (error) {\r\n    const message =\r\n      error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message\r\n    if (message === 'Not authorized, token failed') {\r\n      dispatch(logout())\r\n    }\r\n    dispatch({\r\n      type: ORDER_DETAILS_FAIL,\r\n      payload: message,\r\n    })\r\n  }\r\n}\r\n\r\nexport const payOrder = (orderId, paymentResult) => async (\r\n  dispatch,\r\n  getState\r\n) => {\r\n  try {\r\n    dispatch({\r\n      type: ORDER_PAY_REQUEST,\r\n    })\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState()\r\n\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    }\r\n\r\n    const { data } = await axios.put(\r\n      `/api/orders/${orderId}/pay`,\r\n      paymentResult,\r\n      config\r\n    )\r\n\r\n    dispatch({\r\n      type: ORDER_PAY_SUCCESS,\r\n      payload: data,\r\n    })\r\n  } catch (error) {\r\n    const message =\r\n      error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message\r\n    if (message === 'Not authorized, token failed') {\r\n      dispatch(logout())\r\n    }\r\n    dispatch({\r\n      type: ORDER_PAY_FAIL,\r\n      payload: message,\r\n    })\r\n  }\r\n}\r\n\r\nexport const deliverOrder = (order) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: ORDER_DELIVER_REQUEST,\r\n    })\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState()\r\n\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    }\r\n\r\n    const { data } = await axios.put(\r\n      `/api/orders/${order._id}/deliver`,\r\n      {},\r\n      config\r\n    )\r\n\r\n    dispatch({\r\n      type: ORDER_DELIVER_SUCCESS,\r\n      payload: data,\r\n    })\r\n  } catch (error) {\r\n    const message =\r\n      error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message\r\n    if (message === 'Not authorized, token failed') {\r\n      dispatch(logout())\r\n    }\r\n    dispatch({\r\n      type: ORDER_DELIVER_FAIL,\r\n      payload: message,\r\n    })\r\n  }\r\n}\r\n\r\nexport const listMyOrders = () => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: ORDER_LIST_MY_REQUEST,\r\n    })\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState()\r\n\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    }\r\n\r\n    const { data } = await axios.get(`/api/orders/myorders`, config)\r\n\r\n    dispatch({\r\n      type: ORDER_LIST_MY_SUCCESS,\r\n      payload: data,\r\n    })\r\n  } catch (error) {\r\n    const message =\r\n      error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message\r\n    if (message === 'Not authorized, token failed') {\r\n      dispatch(logout())\r\n    }\r\n    dispatch({\r\n      type: ORDER_LIST_MY_FAIL,\r\n      payload: message,\r\n    })\r\n  }\r\n}\r\n\r\nexport const listOrders = () => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: ORDER_LIST_REQUEST,\r\n    })\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState()\r\n\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    }\r\n\r\n    const { data } = await axios.get(`/api/orders`, config)\r\n\r\n    dispatch({\r\n      type: ORDER_LIST_SUCCESS,\r\n      payload: data,\r\n    })\r\n  } catch (error) {\r\n    const message =\r\n      error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message\r\n    if (message === 'Not authorized, token failed') {\r\n      dispatch(logout())\r\n    }\r\n    dispatch({\r\n      type: ORDER_LIST_FAIL,\r\n      payload: message,\r\n    })\r\n  }\r\n}\r\n\r\n","import React from 'react'\r\nimport { Nav } from 'react-bootstrap'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\n\r\nconst CheckoutSteps = ({ step1, step2, step3, step4 }) => {\r\n  return (\r\n    <Nav className='justify-content-center mb-4'>\r\n      <Nav.Item>\r\n        {step1 ? (\r\n          <LinkContainer to='/login'>\r\n            <Nav.Link>Sign In</Nav.Link>\r\n          </LinkContainer>\r\n        ) : (\r\n          <Nav.Link disabled>Sign In</Nav.Link>\r\n        )}\r\n      </Nav.Item>\r\n\r\n      <Nav.Item>\r\n        {step2 ? (\r\n          <LinkContainer to='/shipping'>\r\n            <Nav.Link>Shipping</Nav.Link>\r\n          </LinkContainer>\r\n        ) : (\r\n          <Nav.Link disabled>Shipping</Nav.Link>\r\n        )}\r\n      </Nav.Item>\r\n\r\n      <Nav.Item>\r\n        {step3 ? (\r\n          <LinkContainer to='/payment'>\r\n            <Nav.Link>Payment</Nav.Link>\r\n          </LinkContainer>\r\n        ) : (\r\n          <Nav.Link disabled>Payment</Nav.Link>\r\n        )}\r\n      </Nav.Item>\r\n\r\n      <Nav.Item>\r\n        {step4 ? (\r\n          <LinkContainer to='/placeorder'>\r\n            <Nav.Link>Place Order</Nav.Link>\r\n          </LinkContainer>\r\n        ) : (\r\n          <Nav.Link disabled>Place Order</Nav.Link>\r\n        )}\r\n      </Nav.Item>\r\n    </Nav>\r\n  )\r\n}\r\n\r\nexport default CheckoutSteps\r\n\r\n","import React, { useState } from 'react'\r\nimport { Form, Button } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport FormContainer from '../components/FormContainer'\r\nimport CheckoutSteps from '../components/CheckoutSteps'\r\nimport { saveShippingAddress } from '../actions/cartActions'\r\n\r\nconst ShippingScreen = ({ history }) => {\r\n  const cart = useSelector((state) => state.cart)\r\n  const { shippingAddress } = cart\r\n\r\n  const [address, setAddress] = useState(shippingAddress.address)\r\n  const [city, setCity] = useState(shippingAddress.city)\r\n  const [postalCode, setPostalCode] = useState(shippingAddress.postalCode)\r\n  const [country, setCountry] = useState(shippingAddress.country)\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  \r\n  const submitHandler = (e) => {\r\n    e.preventDefault()\r\n    dispatch(saveShippingAddress({ address, city, postalCode, country }))\r\n    history.push('/payment')\r\n  }\r\n\r\n  return (\r\n    <FormContainer>\r\n      <CheckoutSteps step1 step2 />\r\n      <h1>Shipping</h1>\r\n      <Form onSubmit={submitHandler}>\r\n        <Form.Group controlId='address'>\r\n          <Form.Label>Address</Form.Label>\r\n          <Form.Control\r\n            type='text'\r\n            placeholder='Enter address'\r\n            value={address}\r\n            required\r\n            onChange={(e) => setAddress(e.target.value)}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n\r\n        <Form.Group controlId='city'>\r\n          <Form.Label>City</Form.Label>\r\n          <Form.Control\r\n            type='text'\r\n            placeholder='Enter city'\r\n            value={city}\r\n            required\r\n            onChange={(e) => setCity(e.target.value)}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n\r\n        <Form.Group controlId='postalCode'>\r\n          <Form.Label>Postal Code</Form.Label>\r\n          <Form.Control\r\n            type='text'\r\n            placeholder='Enter postal code'\r\n            value={postalCode}\r\n            required\r\n            onChange={(e) => setPostalCode(e.target.value)}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n\r\n        <Form.Group controlId='country'>\r\n          <Form.Label>Country</Form.Label>\r\n          <Form.Control\r\n            type='text'\r\n            placeholder='Enter country'\r\n            value={country}\r\n            required\r\n            onChange={(e) => setCountry(e.target.value)}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n\r\n        <Button type='submit' variant='primary'>\r\n          Continue\r\n        </Button>\r\n      </Form>\r\n    </FormContainer>\r\n  )\r\n}\r\n\r\nexport default ShippingScreen\r\n","import React, { useState } from 'react'\r\nimport { Form, Button, Col } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport FormContainer from '../components/FormContainer'\r\nimport CheckoutSteps from '../components/CheckoutSteps'\r\nimport { savePaymentMethod } from '../actions/cartActions'\r\n\r\nconst PaymentScreen = ({ history }) => {\r\n  const cart = useSelector((state) => state.cart)\r\n  const { shippingAddress } = cart\r\n\r\n  if (!shippingAddress) {\r\n    history.push('/shipping')\r\n  }\r\n\r\n  const [paymentMethod, setPaymentMethod] = useState('PayPal')\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault()\r\n    dispatch(savePaymentMethod(paymentMethod))\r\n    history.push('/placeorder')\r\n  }\r\n\r\n  return (\r\n    <FormContainer>\r\n      <CheckoutSteps step1 step2 step3 />\r\n      <h1>Payment Method</h1>\r\n      <Form onSubmit={submitHandler}>\r\n        <Form.Group>\r\n          <Form.Label as='legend'>Select Method</Form.Label>\r\n          <Col>\r\n            <Form.Check\r\n              type='radio'\r\n              label='PayPal or Credit Card'\r\n              id='PayPal'\r\n              name='paymentMethod'\r\n              value='PayPal'\r\n              checked\r\n              onChange={(e) => setPaymentMethod(e.target.value)}\r\n            ></Form.Check>\r\n            {/* <Form.Check\r\n              type='radio'\r\n              label='Stripe'\r\n              id='Stripe'\r\n              name='paymentMethod'\r\n              value='Stripe'\r\n              onChange={(e) => setPaymentMethod(e.target.value)}\r\n            ></Form.Check> */}\r\n          </Col>\r\n        </Form.Group>\r\n\r\n        <Button type='submit' variant='primary'>\r\n          Continue\r\n        </Button>\r\n      </Form>\r\n    </FormContainer>\r\n  )\r\n}\r\n\r\nexport default PaymentScreen\r\n\r\n","import React, { useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Button, Row, Col, ListGroup, Image, Card } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../components/Message'\r\nimport CheckoutSteps from '../components/CheckoutSteps'\r\nimport { createOrder } from '../actions/orderActions'\r\nimport { ORDER_CREATE_RESET } from '../constants/orderConstants'\r\n\r\nconst PlaceOrderScreen = ({ history }) => {\r\n  const dispatch = useDispatch()\r\n\r\n  const cart = useSelector((state) => state.cart)\r\n\r\n  //   Calculate prices\r\n  const addDecimals = (num) => {\r\n    return (Math.round(num * 100) / 100).toFixed(2)\r\n  }\r\n\r\n  \r\n  cart.itemsPrice = addDecimals(\r\n    cart.cartItems.reduce((acc, item) => acc + item.price * item.qty, 0)\r\n  )\r\n  cart.shippingPrice = addDecimals(cart.itemsPrice > 100 ? 0 : 100)\r\n  cart.taxPrice = addDecimals(Number((0.15 * cart.itemsPrice).toFixed(2)))\r\n  cart.totalPrice = (\r\n    Number(cart.itemsPrice) +\r\n    Number(cart.shippingPrice) +\r\n    Number(cart.taxPrice)\r\n  ).toFixed(2)\r\n\r\n  const orderCreate = useSelector((state) => state.orderCreate)\r\n  const { order, success, error } = orderCreate\r\n\r\n  useEffect(() => {\r\n    if (success) {\r\n      history.push(`/order/${order._id}`)\r\n      dispatch({ type: ORDER_CREATE_RESET })\r\n    }\r\n    // eslint-disable-next-line\r\n  }, [history, success])\r\n\r\n  const placeOrderHandler = () => {\r\n    dispatch(\r\n      createOrder({\r\n        orderItems: cart.cartItems,\r\n        shippingAddress: cart.shippingAddress,\r\n        paymentMethod: cart.paymentMethod,\r\n        itemsPrice: cart.itemsPrice,\r\n        shippingPrice: cart.shippingPrice,\r\n        taxPrice: cart.taxPrice,\r\n        totalPrice: cart.totalPrice,\r\n      })\r\n    )\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <CheckoutSteps step1 step2 step3 step4 />\r\n      <Row>\r\n        <Col md={8}>\r\n          <ListGroup variant='flush'>\r\n            <ListGroup.Item>\r\n              <h2>Shipping</h2>\r\n              <p>\r\n                <strong>Address:</strong>\r\n                {cart.shippingAddress.address}, {cart.shippingAddress.city}{' '}\r\n                {cart.shippingAddress.postalCode},{' '}\r\n                {cart.shippingAddress.country}\r\n              </p>\r\n            </ListGroup.Item>\r\n\r\n            <ListGroup.Item>\r\n              <h2>Payment Method</h2>\r\n              <strong>Method: </strong>\r\n              {cart.paymentMethod}\r\n            </ListGroup.Item>\r\n\r\n            <ListGroup.Item>\r\n              <h2>Order Items</h2>\r\n              {cart.cartItems.length === 0 ? (\r\n                <Message>Your cart is empty</Message>\r\n              ) : (\r\n                <ListGroup variant='flush'>\r\n                  {cart.cartItems.map((item, index) => (\r\n                    <ListGroup.Item key={index}>\r\n                      <Row>\r\n                        <Col md={1}>\r\n                          <Image\r\n                            src={item.image}\r\n                            alt={item.name}\r\n                            fluid\r\n                            rounded\r\n                          />\r\n                        </Col>\r\n                        <Col>\r\n                          <Link to={`/product/${item.product}`}>\r\n                            {item.name}\r\n                          </Link>\r\n                        </Col>\r\n                        <Col md={4}>\r\n                          {item.qty} x ₹{item.price} = ₹{item.qty * item.price}\r\n                        </Col>\r\n                      </Row>\r\n                    </ListGroup.Item>\r\n                  ))}\r\n                </ListGroup>\r\n              )}\r\n            </ListGroup.Item>\r\n          </ListGroup>\r\n        </Col>\r\n        <Col md={4}>\r\n          <Card>\r\n            <ListGroup variant='flush'>\r\n              <ListGroup.Item>\r\n                <h2>Order Summary</h2>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Items</Col>\r\n                  <Col>₹{cart.itemsPrice}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Shipping</Col>\r\n                  <Col>₹{cart.shippingPrice}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Tax</Col>\r\n                  <Col>₹{cart.taxPrice}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Total</Col>\r\n                  <Col>₹{cart.totalPrice}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                {error && <Message variant='danger'>{error}</Message>}\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Button\r\n                  type='button'\r\n                  className='btn-block'\r\n                  disabled={cart.cartItems === 0}\r\n                  onClick={placeOrderHandler}\r\n                >\r\n                  Place Order\r\n                </Button>\r\n              </ListGroup.Item>\r\n            </ListGroup>\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default PlaceOrderScreen\r\n","import React, { useState, useEffect } from 'react'\r\nimport axios from 'axios'\r\nimport { PayPalButton } from 'react-paypal-button-v2'\r\nimport { Link } from 'react-router-dom'\r\nimport { Row, Col, ListGroup, Image, Card, Button } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport {\r\n  getOrderDetails,\r\n  payOrder,\r\n  deliverOrder,\r\n} from '../actions/orderActions'\r\nimport {\r\n  ORDER_PAY_RESET,\r\n  ORDER_DELIVER_RESET,\r\n} from '../constants/orderConstants'\r\n\r\nconst OrderScreen = ({ match, history }) => {\r\n  const orderId = match.params.id\r\n\r\n  const [sdkReady, setSdkReady] = useState(false)\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  const orderDetails = useSelector((state) => state.orderDetails)\r\n  const { order, loading, error } = orderDetails\r\n\r\n  const orderPay = useSelector((state) => state.orderPay)\r\n  const { loading: loadingPay, success: successPay } = orderPay\r\n\r\n  const orderDeliver = useSelector((state) => state.orderDeliver)\r\n  const { loading: loadingDeliver, success: successDeliver } = orderDeliver\r\n\r\n  const userLogin = useSelector((state) => state.userLogin)\r\n  const { userInfo } = userLogin\r\n\r\n  if (!loading) {\r\n    //   Calculate prices\r\n    const addDecimals = (num) => {\r\n      return (Math.round(num * 100) / 100).toFixed(2)\r\n    }\r\n\r\n    order.itemsPrice = addDecimals(\r\n      order.orderItems.reduce((acc, item) => acc + item.price * item.qty, 0)\r\n    )\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (!userInfo) {\r\n      history.push('/login')\r\n    }\r\n\r\n    const addPayPalScript = async () => {\r\n      const { data: clientId } = await axios.get('/api/config/paypal')\r\n      const script = document.createElement('script')\r\n      script.type = 'text/javascript'\r\n      script.src = `https://www.paypal.com/sdk/js?client-id=${clientId}`\r\n      script.async = true\r\n      script.onload = () => {\r\n        setSdkReady(true)\r\n      }\r\n      document.body.appendChild(script)\r\n    }\r\n\r\n    if (!order || successPay || successDeliver || order._id !== orderId) {\r\n      dispatch({ type: ORDER_PAY_RESET })\r\n      dispatch({ type: ORDER_DELIVER_RESET })\r\n      dispatch(getOrderDetails(orderId))\r\n    } else if (!order.isPaid) {\r\n      if (!window.paypal) {\r\n        addPayPalScript()\r\n      } else {\r\n        setSdkReady(true)\r\n      }\r\n    }\r\n  }, [dispatch, orderId, successPay, successDeliver, order])\r\n\r\n  const successPaymentHandler = (paymentResult) => {\r\n    console.log(paymentResult)\r\n    dispatch(payOrder(orderId, paymentResult))\r\n  }\r\n\r\n  const deliverHandler = () => {\r\n    dispatch(deliverOrder(order))\r\n  }\r\n\r\n  return loading ? (\r\n    <Loader />\r\n  ) : error ? (\r\n    <Message variant='danger'>{error}</Message>\r\n  ) : (\r\n    <>\r\n      <h1>Order {order._id}</h1>\r\n      <Row>\r\n        <Col md={8}>\r\n          <ListGroup variant='flush'>\r\n            <ListGroup.Item>\r\n              <h2>Shipping</h2>\r\n              <p>\r\n                <strong>Name: </strong> {order.user.name}\r\n              </p>\r\n              <p>\r\n                <strong>Email: </strong>{' '}\r\n                <a href={`mailto:${order.user.email}`}>{order.user.email}</a>\r\n              </p>\r\n              <p>\r\n                <strong>Address:</strong>\r\n                {order.shippingAddress.address}, {order.shippingAddress.city}{' '}\r\n                {order.shippingAddress.postalCode},{' '}\r\n                {order.shippingAddress.country}\r\n              </p>\r\n              {order.isDelivered ? (\r\n                <Message variant='success'>\r\n                  Delivered on {order.deliveredAt}\r\n                </Message>\r\n              ) : (\r\n                <Message variant='danger'>Not Delivered</Message>\r\n              )}\r\n            </ListGroup.Item>\r\n\r\n            <ListGroup.Item>\r\n              <h2>Payment Method</h2>\r\n              <p>\r\n                <strong>Method: </strong>\r\n                {order.paymentMethod}\r\n              </p>\r\n              {order.isPaid ? (\r\n                <Message variant='success'>Paid on {order.paidAt}</Message>\r\n              ) : (\r\n                <Message variant='danger'>Not Paid</Message>\r\n              )}\r\n            </ListGroup.Item>\r\n\r\n            <ListGroup.Item>\r\n              <h2>Order Items</h2>\r\n              {order.orderItems.length === 0 ? (\r\n                <Message>Order is empty</Message>\r\n              ) : (\r\n                <ListGroup variant='flush'>\r\n                  {order.orderItems.map((item, index) => (\r\n                    <ListGroup.Item key={index}>\r\n                      <Row>\r\n                        <Col md={1}>\r\n                          <Image\r\n                            src={item.image}\r\n                            alt={item.name}\r\n                            fluid\r\n                            rounded\r\n                          />\r\n                        </Col>\r\n                        <Col>\r\n                          <Link to={`/product/${item.product}`}>\r\n                            {item.name}\r\n                          </Link>\r\n                        </Col>\r\n                        <Col md={4}>\r\n                          {item.qty} x ₹{item.price} = ₹{item.qty * item.price}\r\n                        </Col>\r\n                      </Row>\r\n                    </ListGroup.Item>\r\n                  ))}\r\n                </ListGroup>\r\n              )}\r\n            </ListGroup.Item>\r\n          </ListGroup>\r\n        </Col>\r\n        <Col md={4}>\r\n          <Card>\r\n            <ListGroup variant='flush'>\r\n              <ListGroup.Item>\r\n                <h2>Order Summary</h2>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Items</Col>\r\n                  <Col>₹{order.itemsPrice}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Shipping</Col>\r\n                  <Col>₹{order.shippingPrice}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Tax</Col>\r\n                  <Col>₹{order.taxPrice}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Total</Col>\r\n                  <Col>₹{order.totalPrice}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              {!order.isPaid && (\r\n                <ListGroup.Item>\r\n                  {loadingPay && <Loader />}\r\n                  {!sdkReady ? (\r\n                    <Loader />\r\n                  ) : (\r\n                    <PayPalButton\r\n                      amount={order.totalPrice}\r\n                      onSuccess={successPaymentHandler}\r\n                    />\r\n                  )}\r\n                </ListGroup.Item>\r\n              )}\r\n              {loadingDeliver && <Loader />}\r\n              {userInfo &&\r\n                userInfo.isAdmin &&\r\n                order.isPaid &&\r\n                !order.isDelivered && (\r\n                  <ListGroup.Item>\r\n                    <Button\r\n                      type='button'\r\n                      className='btn btn-block'\r\n                      onClick={deliverHandler}\r\n                    >\r\n                      Mark As Delivered\r\n                    </Button>\r\n                  </ListGroup.Item>\r\n                )}\r\n            </ListGroup>\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default OrderScreen\r\n\r\n","import React, { useEffect } from 'react'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport { Table, Button } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport { listUsers, deleteUser } from '../actions/userActions'\r\n\r\nconst UserListScreen = ({ history }) => {\r\n  const dispatch = useDispatch()\r\n\r\n  const userList = useSelector((state) => state.userList)\r\n  const { loading, error, users } = userList\r\n\r\n  const userLogin = useSelector((state) => state.userLogin)\r\n  const { userInfo } = userLogin\r\n\r\n  const userDelete = useSelector((state) => state.userDelete)\r\n  const { success: successDelete } = userDelete\r\n\r\n  useEffect(() => {\r\n    if (userInfo && userInfo.isAdmin) {\r\n      dispatch(listUsers())\r\n    } else {\r\n      history.push('/login')\r\n    }\r\n  }, [dispatch, history, successDelete, userInfo])\r\n\r\n  const deleteHandler = (id) => {\r\n    if (window.confirm('Are you sure')) {\r\n      dispatch(deleteUser(id))\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <h1>Users</h1>\r\n      {loading ? (\r\n        <Loader />\r\n      ) : error ? (\r\n        <Message variant='danger'>{error}</Message>\r\n      ) : (\r\n        <Table striped bordered hover responsive className='table-sm'>\r\n          <thead>\r\n            <tr>\r\n              <th>ID</th>\r\n              <th>NAME</th>\r\n              <th>EMAIL</th>\r\n              <th>ADMIN</th>\r\n              <th></th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {users.map((user) => (\r\n              <tr key={user._id}>\r\n                <td>{user._id}</td>\r\n                <td>{user.name}</td>\r\n                <td>\r\n                  <a href={`mailto:${user.email}`}>{user.email}</a>\r\n                </td>\r\n                <td>\r\n                  {user.isAdmin ? (\r\n                    <i className='fas fa-check' style={{ color: 'green' }}></i>\r\n                  ) : (\r\n                    <i className='fas fa-times' style={{ color: 'red' }}></i>\r\n                  )}\r\n                </td>\r\n                <td>\r\n                  <LinkContainer to={`/admin/user/${user._id}/edit`}>\r\n                    <Button variant='light' className='btn-sm'>\r\n                      <i className='fas fa-edit'></i>\r\n                    </Button>\r\n                  </LinkContainer>\r\n                  <Button\r\n                    variant='danger'\r\n                    className='btn-sm'\r\n                    onClick={() => deleteHandler(user._id)}\r\n                  >\r\n                    <i className='fas fa-trash'></i>\r\n                  </Button>\r\n                </td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </Table>\r\n      )}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default UserListScreen\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Form, Button } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport FormContainer from '../components/FormContainer'\r\nimport { getUserDetails, updateUser } from '../actions/userActions'\r\nimport { USER_UPDATE_RESET } from '../constants/userConstants'\r\n\r\nconst UserEditScreen = ({ match, history }) => {\r\n  const userId = match.params.id\r\n\r\n  const [name, setName] = useState('')\r\n  const [email, setEmail] = useState('')\r\n  const [isAdmin, setIsAdmin] = useState(false)\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  const userDetails = useSelector((state) => state.userDetails)\r\n  const { loading, error, user } = userDetails\r\n\r\n  const userUpdate = useSelector((state) => state.userUpdate)\r\n  const {\r\n    loading: loadingUpdate,\r\n    error: errorUpdate,\r\n    success: successUpdate,\r\n  } = userUpdate\r\n\r\n  useEffect(() => {\r\n    if (successUpdate) {\r\n      dispatch({ type: USER_UPDATE_RESET })\r\n      history.push('/admin/userlist')\r\n    } else {\r\n      if (!user.name || user._id !== userId) {\r\n        dispatch(getUserDetails(userId))\r\n      } else {\r\n        setName(user.name)\r\n        setEmail(user.email)\r\n        setIsAdmin(user.isAdmin)\r\n      }\r\n    }\r\n  }, [dispatch, history, userId, user, successUpdate])\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault()\r\n    dispatch(updateUser({ _id: userId, name, email, isAdmin }))\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Link to='/admin/userlist' className='btn btn-light my-3'>\r\n        Go Back\r\n      </Link>\r\n      <FormContainer>\r\n        <h1>Edit User</h1>\r\n        {loadingUpdate && <Loader />}\r\n        {errorUpdate && <Message variant='danger'>{errorUpdate}</Message>}\r\n        {loading ? (\r\n          <Loader />\r\n        ) : error ? (\r\n          <Message variant='danger'>{error}</Message>\r\n        ) : (\r\n          <Form onSubmit={submitHandler}>\r\n            <Form.Group controlId='name'>\r\n              <Form.Label>Name</Form.Label>\r\n              <Form.Control\r\n                type='name'\r\n                placeholder='Enter name'\r\n                value={name}\r\n                onChange={(e) => setName(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId='email'>\r\n              <Form.Label>Email Address</Form.Label>\r\n              <Form.Control\r\n                type='email'\r\n                placeholder='Enter email'\r\n                value={email}\r\n                onChange={(e) => setEmail(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId='isadmin'>\r\n              <Form.Check\r\n                type='checkbox'\r\n                label='Is Admin'\r\n                checked={isAdmin}\r\n                onChange={(e) => setIsAdmin(e.target.checked)}\r\n              ></Form.Check>\r\n            </Form.Group>\r\n\r\n            <Button type='submit' variant='primary'>\r\n              Update\r\n            </Button>\r\n          </Form>\r\n        )}\r\n      </FormContainer>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default UserEditScreen\r\n","import React, { useEffect } from 'react'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport { Table, Button, Row, Col } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport Paginate from '../components/Paginate'\r\nimport {\r\n  listProducts,\r\n  deleteProduct,\r\n  createProduct,\r\n} from '../actions/productActions'\r\nimport { PRODUCT_CREATE_RESET } from '../constants/productConstants'\r\n\r\nconst ProductListScreen = ({ history, match }) => {\r\n  const pageNumber = match.params.pageNumber || 1\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  const productList = useSelector((state) => state.productList)\r\n  const { loading, error, products, page, pages } = productList\r\n\r\n  const productDelete = useSelector((state) => state.productDelete)\r\n  const {\r\n    loading: loadingDelete,\r\n    error: errorDelete,\r\n    success: successDelete,\r\n  } = productDelete\r\n\r\n  const productCreate = useSelector((state) => state.productCreate)\r\n  const {\r\n    loading: loadingCreate,\r\n    error: errorCreate,\r\n    success: successCreate,\r\n    product: createdProduct,\r\n  } = productCreate\r\n\r\n  const userLogin = useSelector((state) => state.userLogin)\r\n  const { userInfo } = userLogin\r\n\r\n  useEffect(() => {\r\n    dispatch({ type: PRODUCT_CREATE_RESET })\r\n\r\n    if (!userInfo || !userInfo.isAdmin) {\r\n      history.push('/login')\r\n    }\r\n\r\n    if (successCreate) {\r\n      history.push(`/admin/product/${createdProduct._id}/edit`)\r\n    } else {\r\n      dispatch(listProducts('', pageNumber))\r\n    }\r\n  }, [\r\n    dispatch,\r\n    history,\r\n    userInfo,\r\n    successDelete,\r\n    successCreate,\r\n    createdProduct,\r\n    pageNumber,\r\n  ])\r\n\r\n  const deleteHandler = (id) => {\r\n    if (window.confirm('Are you sure')) {\r\n      dispatch(deleteProduct(id))\r\n    }\r\n  }\r\n\r\n  const createProductHandler = () => {\r\n    dispatch(createProduct())\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Row className='align-items-center'>\r\n        <Col>\r\n          <h1>Products</h1>\r\n        </Col>\r\n        <Col className='text-right'>\r\n          <Button className='my-3' onClick={createProductHandler}>\r\n            <i className='fas fa-plus'></i> Create Product\r\n          </Button>\r\n        </Col>\r\n      </Row>\r\n      {loadingDelete && <Loader />}\r\n      {errorDelete && <Message variant='danger'>{errorDelete}</Message>}\r\n      {loadingCreate && <Loader />}\r\n      {errorCreate && <Message variant='danger'>{errorCreate}</Message>}\r\n      {loading ? (\r\n        <Loader />\r\n      ) : error ? (\r\n        <Message variant='danger'>{error}</Message>\r\n      ) : (\r\n        <>\r\n          <Table striped bordered hover responsive className='table-sm'>\r\n            <thead>\r\n              <tr>\r\n                <th>ID</th>\r\n                <th>NAME</th>\r\n                <th>PRICE</th>\r\n                <th>CATEGORY</th>\r\n                <th>BRAND</th>\r\n                <th></th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {products.map((product) => (\r\n                <tr key={product._id}>\r\n                  <td>{product._id}</td>\r\n                  <td>{product.name}</td>\r\n                  <td>₹{product.price}</td>\r\n                  <td>{product.category}</td>\r\n                  <td>{product.brand}</td>\r\n                  <td>\r\n                    <LinkContainer to={`/admin/product/${product._id}/edit`}>\r\n                      <Button variant='light' className='btn-sm'>\r\n                        <i className='fas fa-edit'></i>\r\n                      </Button>\r\n                    </LinkContainer>\r\n                    <Button\r\n                      variant='danger'\r\n                      className='btn-sm'\r\n                      onClick={() => deleteHandler(product._id)}\r\n                    >\r\n                      <i className='fas fa-trash'></i>\r\n                    </Button>\r\n                  </td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </Table>\r\n          <Paginate pages={pages} page={page} isAdmin={true} />\r\n        </>\r\n      )}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default ProductListScreen\r\n","import axios from 'axios'\r\nimport React, { useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Form, Button } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport FormContainer from '../components/FormContainer'\r\nimport { listProductDetails, updateProduct } from '../actions/productActions'\r\nimport { PRODUCT_UPDATE_RESET } from '../constants/productConstants'\r\n\r\nconst ProductEditScreen = ({ match, history }) => {\r\n  const productId = match.params.id\r\n\r\n  const [name, setName] = useState('')\r\n  const [price, setPrice] = useState(0)\r\n  const [image, setImage] = useState('')\r\n  const [brand, setBrand] = useState('')\r\n  const [category, setCategory] = useState('Atta & Rice')\r\n  const [countInStock, setCountInStock] = useState(0)\r\n  const [description, setDescription] = useState('')\r\n  const [uploading, setUploading] = useState(false)\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  const productDetails = useSelector((state) => state.productDetails)\r\n  const { loading, error, product } = productDetails\r\n\r\n  const productUpdate = useSelector((state) => state.productUpdate)\r\n  const {\r\n    loading: loadingUpdate,\r\n    error: errorUpdate,\r\n    success: successUpdate,\r\n  } = productUpdate\r\n\r\n  useEffect(() => {\r\n    if (successUpdate) {\r\n      dispatch({ type: PRODUCT_UPDATE_RESET })\r\n      history.push('/admin/productlist')\r\n    } else {\r\n      if (!product.name || product._id !== productId) {\r\n        dispatch(listProductDetails(productId))\r\n      } else {\r\n        setName(product.name)\r\n        setPrice(product.price)\r\n        setImage(product.image)\r\n        setBrand(product.brand)\r\n        // setCategory(product.category)\r\n        setCountInStock(product.countInStock)\r\n        setDescription(product.description)\r\n      }\r\n    }\r\n  }, [dispatch, history, productId, product, successUpdate])\r\n\r\n  const uploadFileHandler = async (e) => {\r\n    const file = e.target.files[0]\r\n    const base64 = await convertToBase64(file);\r\n    const formData = new FormData()\r\n    formData.append('image', file)\r\n    console.log(base64)\r\n    setImage(base64)\r\n    setUploading(true)\r\n    \r\n    try {\r\n      const config = {\r\n        headers: {\r\n          'Content-Type': 'multipart/form-data',\r\n        },\r\n      }\r\n      \r\n      const { data } = await axios.post('/api/upload',formData,config)\r\n      \r\n      // setImage(data)\r\n      setUploading(false)\r\n    } catch (error) {\r\n      console.error(error)\r\n      setUploading(false)\r\n    }\r\n  }\r\n\r\n  const submitHandler = (e) => {\r\n  \r\n    \r\n    e.preventDefault()\r\n    dispatch(\r\n      updateProduct({\r\n        _id: productId,\r\n        name,\r\n        price,\r\n        image,\r\n        brand,\r\n        category,\r\n        description,\r\n        countInStock,\r\n      })\r\n    )\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Link to='/admin/productlist' className='btn btn-light my-3'>\r\n        Go Back\r\n      </Link>\r\n      <FormContainer>\r\n        <h1>Edit Product</h1>\r\n        {loadingUpdate && <Loader />}\r\n        {errorUpdate && <Message variant='danger'>{errorUpdate}</Message>}\r\n        {loading ? (\r\n          <Loader />\r\n        ) : error ? (\r\n          <Message variant='danger'>{error}</Message>\r\n        ) : (\r\n          <Form onSubmit={submitHandler}>\r\n            <Form.Group controlId='name'>\r\n              <Form.Label>Name</Form.Label>\r\n              <Form.Control\r\n                type='name'\r\n                placeholder='Enter name'\r\n                value={name}\r\n                onChange={(e) => setName(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId='price'>\r\n              <Form.Label>Price</Form.Label>\r\n              <Form.Control\r\n                type='number'\r\n                placeholder='Enter price'\r\n                value={price}\r\n                onChange={(e) => setPrice(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId='image'>\r\n              <Form.Label>Image</Form.Label>\r\n              <img src={image || \"https://www.barum-tyres.com/content/dam/conti-tires-cms/continental/b2c/products/plt/dummy/dummy-tire_v2.png\"} style={{width:'150px',height:'150px'}} />\r\n              {/* <Form.Control\r\n                type='text'\r\n                placeholder='Enter image url'\r\n                value={image}\r\n                onChange={(e) => setImage(e.target.value)}\r\n              ></Form.Control> */}\r\n              <Form.File\r\n                id='image-file'\r\n                label='Choose File'\r\n                custom\r\n                onChange={uploadFileHandler}\r\n              ></Form.File>\r\n              {uploading && <Loader />}\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId='brand'>\r\n              <Form.Label>Brand</Form.Label>\r\n              <Form.Control\r\n                type='text'\r\n                placeholder='Enter brand'\r\n                value={brand}\r\n                onChange={(e) => setBrand(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId='countInStock'>\r\n              <Form.Label>Count In Stock</Form.Label>\r\n              <Form.Control\r\n                type='number'\r\n                placeholder='Enter countInStock'\r\n                value={countInStock}\r\n                onChange={(e) => setCountInStock(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId='category'>\r\n              <Form.Label>Category</Form.Label>\r\n              <Form.Control\r\n                as='select'\r\n                value={category}\r\n                onChange={(e) => setCategory(e.target.value)}\r\n              >\r\n                {/* <option>Select Category</option> */}\r\n                <option value='Atta & Rice'>Atta & Rice</option>\r\n                <option value='Bakery,Cakes, dairy'>Bakery,Cakes, dairy</option>\r\n                <option value='Chocolates & Ice Cream'>Chocolates & Ice Cream</option>\r\n                <option value='Dals & Sugar'>Dals & Sugar</option>\r\n                <option value='Eggs,Meat & Fish'>Eggs,Meat & Fish</option>\r\n                <option value='Grocery'>Grocery</option>\r\n                <option value='Fruits & Vegitables'>Fruits & Vegitables</option>\r\n                <option value='Oils & Dry Fruits'>Oils & Dry Fruits</option>\r\n              </Form.Control>\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId='description'>\r\n              <Form.Label>Description</Form.Label>\r\n              <Form.Control\r\n                type='text'\r\n                placeholder='Enter description'\r\n                value={description}\r\n                onChange={(e) => setDescription(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Button type='submit' variant='primary'>\r\n              Update\r\n            </Button>\r\n          </Form>\r\n        )}\r\n      </FormContainer>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default ProductEditScreen\r\n\r\n\r\nfunction convertToBase64(file){\r\n  return new Promise((resolve, reject) => {\r\n    const fileReader = new FileReader();\r\n    fileReader.readAsDataURL(file);\r\n    fileReader.onload = () => {\r\n      resolve(fileReader.result)\r\n    };\r\n    fileReader.onerror = (error) => {\r\n      reject(error)\r\n    }\r\n  })\r\n}","import React, { useEffect } from 'react'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport { Table, Button } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport { listOrders } from '../actions/orderActions'\r\n\r\nconst OrderListScreen = ({ history }) => {\r\n  const dispatch = useDispatch()\r\n\r\n  const orderList = useSelector((state) => state.orderList)\r\n  const { loading, error, orders } = orderList\r\n\r\n  const userLogin = useSelector((state) => state.userLogin)\r\n  const { userInfo } = userLogin\r\n\r\n  useEffect(() => {\r\n    if (userInfo && userInfo.isAdmin) {\r\n      dispatch(listOrders())\r\n    } else {\r\n      history.push('/login')\r\n    }\r\n  }, [dispatch, history, userInfo])\r\n\r\n  return (\r\n    <>\r\n      <h1>Orders</h1>\r\n      {loading ? (\r\n        <Loader />\r\n      ) : error ? (\r\n        <Message variant='danger'>{error}</Message>\r\n      ) : (\r\n        <Table striped bordered hover responsive className='table-sm'>\r\n          <thead>\r\n            <tr>\r\n              <th>ID</th>\r\n              <th>USER</th>\r\n              <th>DATE</th>\r\n              <th>TOTAL</th>\r\n              <th>PAID</th>\r\n              <th>DELIVERED</th>\r\n              <th></th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {orders.map((order) => (\r\n              <tr key={order._id}>\r\n                <td>{order._id}</td>\r\n                <td>{order.user && order.user.name}</td>\r\n                <td>{order.createdAt.substring(0, 10)}</td>\r\n                <td>₹{order.totalPrice}</td>\r\n                <td>\r\n                  {order.isPaid ? (\r\n                    order.paidAt.substring(0, 10)\r\n                  ) : (\r\n                    <i className='fas fa-times' style={{ color: 'red' }}></i>\r\n                  )}\r\n                </td>\r\n                <td>\r\n                  {order.isDelivered ? (\r\n                    order.deliveredAt.substring(0, 10)\r\n                  ) : (\r\n                    <i className='fas fa-times' style={{ color: 'red' }}></i>\r\n                  )}\r\n                </td>\r\n                <td>\r\n                  <LinkContainer to={`/order/${order._id}`}>\r\n                    <Button variant='light' className='btn-sm'>\r\n                      Details\r\n                    </Button>\r\n                  </LinkContainer>\r\n                </td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </Table>\r\n      )}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default OrderListScreen\r\n\r\n","import React, { useEffect, useState } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Row, Col } from 'react-bootstrap'\r\nimport Product from '../components/Product'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport Paginate from '../components/Paginate'\r\nimport ProductCarousel from '../components/ProductCarousel'\r\nimport Meta from '../components/Meta'\r\nimport { listProducts } from '../actions/productActions'\r\nimport axios from 'axios'\r\nimport './category.css'\r\nconst Categoryscreen = ({ match }) => {\r\n  const keyword = match.params.keyword\r\n  const [pdcollection,setpdcollection]=useState([])\r\n  const pageNumber = match.params.pageNumber || 1\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  const productList = useSelector((state) => state.productList)\r\n  const { loading, error, products, page, pages } = productList\r\n\r\n  useEffect(()=>{\r\n    axios.get('https://online-supermarket1-1.onrender.com/productcollection')\r\n    .then((res)=>{\r\n      \r\n      setpdcollection(res.data)\r\n    })\r\n    .catch((err)=>console.log(err))\r\n  },[])\r\n\r\n  useEffect(() => {\r\n    dispatch(listProducts(keyword, pageNumber))\r\n  }, [dispatch, keyword, pageNumber])\r\n\r\n  \r\n  function atta(pds){\r\n   return pds.category === 'Atta & Rice'\r\n  }\r\n\r\n  function bakes(pds){\r\n    return pds.category === 'Bakery,Cakes, dairy'\r\n   }\r\n\r\n   function Chocolates(pds){\r\n    return pds.category === 'Chocolates & Ice Cream'\r\n   }\r\n\r\n   function dals(pds){\r\n    return pds.category === 'Dals & Sugar'\r\n   }\r\n\r\n   function eggs(pds){\r\n    return pds.category === 'Eggs,Meat & Fish'\r\n   }\r\n\r\n   function grocery(pds){\r\n    return pds.category === 'Grocery'\r\n   }\r\n\r\n   function fruirs(pds){\r\n    return pds.category === 'Fruits & Vegitables'\r\n   }\r\n   \r\n   function oil(pds){\r\n    return pds.category === 'Oils & Dry Fruits'\r\n   }\r\n\r\n\r\n  return (\r\n    <>\r\n      <Meta />\r\n      {/* {!keyword ? (\r\n        <ProductCarousel />\r\n      ) : (\r\n        <Link to='/' className='btn btn-light'>\r\n          Go Back\r\n        </Link>\r\n      )}\r\n      <h1 className='text-center'>Latest Products</h1> */}\r\n      {loading ? (\r\n        <Loader />\r\n      ) : error ? (\r\n        <Message variant='danger'>{error}</Message>\r\n      ) : (\r\n        <>\r\n           <h1 className='cate' >Atta & Rice</h1>\r\n          <Row>\r\n            {/* {products.map((product) => (\r\n              <Col key={product._id} sm={12} md={6} lg={4} xl={3}>\r\n                <Product product={product} />\r\n              </Col>\r\n            ))} */}\r\n             \r\n                {pdcollection.filter(atta).map((product)=> (\r\n                 \r\n              <Col key={product._id} sm={12} md={6} lg={4} xl={3}>\r\n                <Product product={product} />\r\n              </Col>\r\n              \r\n              ))}\r\n\r\n          </Row>\r\n  \r\n          <h1 className='cate'>Bakery,Cakes and dairy</h1>\r\n          <Row>\r\n                        \r\n                {pdcollection.filter(bakes).map((product)=> (\r\n                 \r\n              <Col key={product._id} sm={12} md={6} lg={4} xl={3}>\r\n                <Product product={product} />\r\n              </Col>\r\n              \r\n              ))}\r\n\r\n          </Row>\r\n\r\n          <h1 className='cate'>Chocolates & Ice Cream</h1>\r\n          <Row>\r\n                        \r\n                {pdcollection.filter(Chocolates).map((product)=> (\r\n                 \r\n              <Col key={product._id} sm={12} md={6} lg={4} xl={3}>\r\n                <Product product={product} />\r\n              </Col>\r\n              \r\n              ))}\r\n\r\n          </Row>\r\n\r\n          <h1 className='cate'>Dals & Sugar</h1>\r\n          <Row>\r\n                        \r\n                {pdcollection.filter(dals).map((product)=> (\r\n                 \r\n              <Col key={product._id} sm={12} md={6} lg={4} xl={3}>\r\n                <Product product={product} />\r\n              </Col>\r\n              \r\n              ))}\r\n\r\n          </Row>\r\n\r\n          <h1 className='cate'>Eggs,Meat & Fish</h1>\r\n          <Row>\r\n                        \r\n                {pdcollection.filter(eggs).map((product)=> (\r\n                 \r\n              <Col key={product._id} sm={12} md={6} lg={4} xl={3}>\r\n                <Product product={product} />\r\n              </Col>\r\n              \r\n              ))}\r\n\r\n          </Row>\r\n\r\n          <h1 className='cate'>Grocery</h1>\r\n          <Row>\r\n                        \r\n                {pdcollection.filter(grocery).map((product)=> (\r\n                 \r\n              <Col key={product._id} sm={12} md={6} lg={4} xl={3}>\r\n                <Product product={product} />\r\n              </Col>\r\n              \r\n              ))}\r\n\r\n          </Row>\r\n\r\n          <h1 className='cate'>Fruits & Vegitables</h1>\r\n          <Row>\r\n                        \r\n                {pdcollection.filter(fruirs).map((product)=> (\r\n                 \r\n              <Col key={product._id} sm={12} md={6} lg={4} xl={3}>\r\n                <Product product={product} />\r\n              </Col>\r\n              \r\n              ))}\r\n\r\n          </Row>\r\n\r\n          <h1 className='cate'>Oils & Dry Fruits</h1>\r\n          <Row>\r\n                        \r\n                {pdcollection.filter(oil).map((product)=> (\r\n                 \r\n              <Col key={product._id} sm={12} md={6} lg={4} xl={3}>\r\n                <Product product={product} />\r\n              </Col>\r\n              \r\n              ))}\r\n\r\n          </Row>\r\n\r\n\r\n\r\n          {/* <Paginate\r\n            pages={pages}\r\n            page={page}\r\n            keyword={keyword ? keyword : ''}\r\n          /> */}\r\n        </>\r\n      )}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Categoryscreen\r\n\r\n","import React from 'react'\r\nimport { BrowserRouter as Router, Route } from 'react-router-dom'\r\nimport { Container } from 'react-bootstrap'\r\nimport Header from './components/Header'\r\nimport Footer from './components/Footer'\r\nimport HomeScreen from './screens/HomeScreen'\r\nimport ProductScreen from './screens/ProductScreen'\r\nimport CartScreen from './screens/CartScreen'\r\nimport LoginScreen from './screens/LoginScreen'\r\nimport RegisterScreen from './screens/RegisterScreen'\r\nimport ProfileScreen from './screens/ProfileScreen'\r\nimport ShippingScreen from './screens/ShippingScreen'\r\nimport PaymentScreen from './screens/PaymentScreen'\r\nimport PlaceOrderScreen from './screens/PlaceOrderScreen'\r\nimport OrderScreen from './screens/OrderScreen'\r\nimport UserListScreen from './screens/UserListScreen'\r\nimport UserEditScreen from './screens/UserEditScreen'\r\nimport ProductListScreen from './screens/ProductListScreen'\r\nimport ProductEditScreen from './screens/ProductEditScreen'\r\nimport OrderListScreen from './screens/OrderListScreen'\r\nimport Categoryscreen from './screens/category'\r\n\r\nconst App = () => {\r\n  return (\r\n    <Router>\r\n      <Header />\r\n      <main className='py-3' style={{backgroundColor:\"#f4f6f6\"}}>\r\n        <Container>\r\n          <Route path='/order/:id' component={OrderScreen} />\r\n          <Route path='/shipping' component={ShippingScreen} />\r\n          <Route path='/payment' component={PaymentScreen} />\r\n          <Route path='/placeorder' component={PlaceOrderScreen} />\r\n          <Route path='/login' component={LoginScreen} />\r\n          <Route path='/register' component={RegisterScreen} />\r\n          <Route path='/profile' component={ProfileScreen} />\r\n          <Route path='/product/:id' component={ProductScreen} />\r\n          <Route path='/cart/:id?' component={CartScreen} />\r\n          <Route path='/admin/userlist' component={UserListScreen} />\r\n          <Route path='/admin/user/:id/edit' component={UserEditScreen} />\r\n          <Route\r\n            path='/admin/productlist'\r\n            component={ProductListScreen}\r\n            exact\r\n          />\r\n          <Route\r\n            path='/admin/productlist/:pageNumber'\r\n            component={ProductListScreen}\r\n            exact\r\n          />\r\n          <Route path='/admin/product/:id/edit' component={ProductEditScreen} />\r\n          <Route path='/admin/orderlist' component={OrderListScreen} />\r\n          <Route path='/search/:keyword' component={HomeScreen} exact />\r\n          <Route path='/page/:pageNumber' component={HomeScreen} exact />\r\n          <Route path='/category' component={Categoryscreen} exact />\r\n          <Route\r\n            path='/search/:keyword/page/:pageNumber'\r\n            component={HomeScreen}\r\n            exact\r\n          />\r\n          <Route path='/' component={HomeScreen} exact />\r\n        </Container>\r\n      </main>\r\n      <Footer />\r\n    </Router>\r\n  )\r\n}\r\n\r\nexport default App\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport { Provider } from 'react-redux'\r\nimport store from './store'\r\nimport './bootstrap.min.css'\r\nimport './index.css'\r\nimport App from './App'\r\nimport * as serviceWorker from './serviceWorker'\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById('root')\r\n)\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister()\r\n\r\n"],"sourceRoot":""}